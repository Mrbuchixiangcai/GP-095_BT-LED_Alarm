C51 COMPILER V9.00   LED_MODE                                                              11/19/2018 17:14:21 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LED_MODE
OBJECT MODULE PLACED IN .\Objects\LED_Mode.obj
COMPILER INVOKED BY: D:\ProgramFiles\Keil_v5\C51\BIN\C51.EXE App_User\Source\LED_Mode.c OPTIMIZE(8,SPEED) BROWSE INCDIR(
                    -.\Device;.\App_User\Include) DEBUG OBJECTEXTEND PRINT(.\Listings\LED_Mode.lst) OBJECT(.\Objects\LED_Mode.obj)

line level    source

   1          /*******************/
   2          /*头文件header file*/
   3          /*******************/
   4          #include "app_main.h"
   5          
   6          /************************/
   7          /*宏定义macro definition*/
   8          /************************/
   9          u8 dispBuff[5];
  10          #define DIG_NUM1 dispBuff[0]
  11          #define DIG_NUM2 dispBuff[1]
  12          #define DIG_NUM3 dispBuff[2]
  13          #define DIG_NUM4 dispBuff[3]
  14          #define DIG_NUM5 dispBuff[4]
  15          /*************************/
  16          /*类型定义byte definition*/
  17          /*************************/
  18          LED_BRIGHTNESS_TypeDef  LED_Brightness_TypeDef;
  19          ALRAM_TypeDef  Alarm1_TypeDef;
  20          
  21          /****************************/
  22          /*标志位定义flags definetion*/
  23          /****************************/
  24          BOOL  gbDispSetA1;
  25          
  26          //变量定义
  27          u8 bdata lcd_BitRam0;
  28          u8 bdata lcd_BitRam1;
  29          
  30          sbit  gblcd_buz1   = lcd_BitRam0 ^ 0;
  31          sbit  gblcd_al     = lcd_BitRam0 ^ 1;//原来是gblcd_radio1
  32          sbit  gblcd_buz2   = lcd_BitRam0 ^ 2;
  33          sbit  gblcd_radio2 = lcd_BitRam0 ^ 3;
  34          sbit  gblcd_dot    = lcd_BitRam0 ^ 4;//
  35          sbit  gblcd_colon  = lcd_BitRam0 ^ 5;//
  36          sbit  gblcd_sleep  = lcd_BitRam0 ^ 6;//
  37          sbit  gblcd_aux    = lcd_BitRam0 ^ 7;
  38          sbit  gblcd_am     = lcd_BitRam1 ^ 0;//
  39          sbit  gblcd_pm     = lcd_BitRam1 ^ 1;//
  40          sbit  gblcd_fm     = lcd_BitRam1 ^ 2;
  41          sbit  gblcd_mw     = lcd_BitRam1 ^ 3;
  42          sbit  gblcd_mhz    = lcd_BitRam1 ^ 4;
  43          sbit  gblcd_khz    = lcd_BitRam1 ^ 5;
  44          sbit  gblcd_five   = lcd_BitRam1 ^ 6;
  45          sbit  gblcd_bt     = lcd_BitRam1 ^ 7;
  46          //                                                                                                        
             -                                                                                                                        
             -           sbit  gblcd_al        = lcd_BitRam1 ^ 7; //al:alarm
  47          /*****************************/
  48          /*变量定义variable definition*/
  49          /*****************************/
  50          
  51          
  52          /**************************/
C51 COMPILER V9.00   LED_MODE                                                              11/19/2018 17:14:21 PAGE 2   

  53          /*数组定义array definition*/
  54          /**************************/
  55          code u8 dispCode_Arr[]=  //arr:array
  56          {
  57                  DIG_0,DIG_1,DIG_2,DIG_3,DIG_4,DIG_5,DIG_6,DIG_7,DIG_8,DIG_9,DIG_NONE,           //数字
  58                  CH_a,CH_b,CH_c,CH_d,CH_h,CH_l,CH_n,CH_o,CH_r,CH_t,CH_u,CH_y,                            //小写字母
  59                  CH_A,CH_C,CH_E,CH_F,CH_G,CH_H,CH_I,CH_J,CH_L,CH_N,CH_O,CH_P,CH_S,CH_U,CH__,     //大写字母
  60          };
  61          
  62          /******************************/
  63          /*函数声明Function declaration*/
  64          /******************************/
  65          
  66          /*****************************/
  67          /*函数定义function definetion*/
  68          /*****************************/
  69          
  70          
  71          /*******************************************************************************
  72           * 函数原型：
  73           * 输入参数：
  74           * 输出参数：
  75           * 函数功能：把要更新的值赋给DIG_NUMx，
  76           * 返回值说明：
  77           * 创建日期：
  78           * 创建人：
  79           * 修改日期
  80           * 修改人：
  81           * 第N次修改：
  82           * 修改原因：
  83           * 备注：把要更新的值赋给DIG_NUMx，然后相当于赋值给了dispBuff[x]，dispBuff被调用
  84           *               在Led_Buffer[i] = dispCode_Arr[dispBuff[i]]这里被赋给个Led_Buffer,
  85           *               Led_Buffer会被与上一次调用Led_Buffer时判断，，然后置位相应的LED端口。
  86           *******************************************************************************/
  87          void DisplayNum12(u8 dat)
  88          {
  89   1              DIG_NUM1 = (dat / 10); //相当于赋值给了dispBuff[0]，最后判断是否与对应的LED，
  90   1              DIG_NUM2 = (dat % 10);
  91   1              if (!DIG_NUM1)
  92   1                      DIG_NUM1 = eD_NONE;
  93   1      }
  94          
  95          /*******************************************************************************
  96           * 函数原型：
  97           * 输入参数：
  98           * 输出参数：
  99           * 函数功能：
 100           * 返回值说明：
 101           * 创建日期：
 102           * 创建人：
 103           * 修改日期
 104           * 修改人：
 105           * 第N次修改：
 106           * 修改原因：
 107           * 备注：
 108           *******************************************************************************/
 109          void DisplayNum34(u8 dat)
 110          {
 111   1              DIG_NUM3 = (dat / 10);
 112   1              DIG_NUM4 = (dat % 10);
 113   1      }
 114          
C51 COMPILER V9.00   LED_MODE                                                              11/19/2018 17:14:21 PAGE 3   

 115          /*******************************************************************************
 116           * 函数原型：
 117           * 输入参数：
 118           * 输出参数：
 119           * 函数功能：
 120           * 返回值说明：
 121           * 创建日期：
 122           * 创建人：
 123           * 修改日期
 124           * 修改人：
 125           * 第N次修改：
 126           * 修改原因：
 127           * 备注：
 128           *******************************************************************************/
 129          BOOL NoFlash(void)
 130          {
 131   1              if (cntNoFlash != 0)
 132   1              {
 133   2                      //cntNoFlash--;
 134   2                      return 1;
 135   2              }
 136   1              return 0;
 137   1      }
 138          
 139          /*******************************************************************************
 140           * 函数原型：
 141           * 输入参数：
 142           * 输出参数：
 143           * 函数功能：
 144           * 返回值说明：
 145           * 创建日期：
 146           * 创建人：
 147           * 修改日期
 148           * 修改人：
 149           * 第N次修改：
 150           * 修改原因：
 151           * 备注：
 152           *******************************************************************************/
 153          void Display_HH(u8 hh_mm_TypeDef)
 154          {
 155   1              u8  tmpHour;
 156   1              switch (hh_mm_TypeDef)
 157   1              {
 158   2                      case eDS_RTC:
 159   2                              tmpHour=Time_Temp_TypeDef.temp_RTC_Hour;
 160   2                              break;
 161   2                      case eDS_AL1:
 162   2                              tmpHour = Alarm1_TypeDef.tempHour;
 163   2                              break;
 164   2              }
 165   1              if (gb12HourDisp)//12小时制显示
 166   1              {
 167   2                      if (tmpHour < 12)  //如果小于12则是凌晨0点到11:59，为上午
 168   2                      {
 169   3                              gblcd_am = 1;  //标志位为1，设置对应的LED是否亮起
 170   3                      }
 171   2                      else
 172   2                      {
 173   3                              gblcd_pm = 1; //如果大于12则是12:00到23:59，为下午//标志位为1，设置对应的LED是否亮起
 174   3                              tmpHour -= 12;//因为是12小时制，所以下午的时间也是12小时制显示，要减12
 175   3                      }
 176   2                      if (tmpHour == 0) //零点是显示12的，中午12点也是显示12的
C51 COMPILER V9.00   LED_MODE                                                              11/19/2018 17:14:21 PAGE 4   

 177   2                      {
 178   3                              tmpHour = 12;
 179   3                      }
 180   2                      DisplayNum12(tmpHour);
 181   2              }
 182   1      }
 183          
 184          /*******************************************************************************
 185           * 函数原型：
 186           * 输入参数：
 187           * 输出参数：
 188           * 函数功能：
 189           * 返回值说明：
 190           * 创建日期：
 191           * 创建人：
 192           * 修改日期
 193           * 修改人：
 194           * 第N次修改：
 195           * 修改原因：
 196           * 备注：
 197           *******************************************************************************/
 198          void Display_MM(u8 hh_mm_TypeDef)
 199          {
 200   1              u8  tmpMinute;
 201   1              switch (hh_mm_TypeDef)
 202   1              {
 203   2                      case eDS_RTC:
 204   2                              tmpMinute=Time_Temp_TypeDef.temp_RTC_Minute;
 205   2                              break;
 206   2                      case eDS_AL1:
 207   2                              tmpMinute = Alarm1_TypeDef.tempMinute;
 208   2                              break;
 209   2              }
 210   1              DisplayNum34(tmpMinute);
 211   1      }
 212          
 213          /*******************************************************************************
 214           * 函数原型：
 215           * 输入参数：
 216           * 输出参数：
 217           * 函数功能：
 218           * 返回值说明：
 219           * 创建日期：
 220           * 创建人：
 221           * 修改日期
 222           * 修改人：
 223           * 第N次修改：
 224           * 修改原因：
 225           * 备注：
 226           *******************************************************************************/
 227          void Display_HH_MM(u8 hh_mm_TypeDef)
 228          {
 229   1              u8  tmpHour, tmpMinute;
 230   1              switch (hh_mm_TypeDef)
 231   1              {
 232   2                      case eDS_RTC:
 233   2                              tmpHour=Time_Temp_TypeDef.temp_RTC_Hour;
 234   2                              tmpMinute=Time_Temp_TypeDef.temp_RTC_Minute;
 235   2                              break;
 236   2                      case eDS_AL1:
 237   2                              tmpHour = Alarm1_TypeDef.tempHour;
 238   2                              tmpMinute = Alarm1_TypeDef.tempMinute;
C51 COMPILER V9.00   LED_MODE                                                              11/19/2018 17:14:21 PAGE 5   

 239   2                              break;
 240   2              }
 241   1              if (gb12HourDisp)//12小时制显示
 242   1              {
 243   2                      if (tmpHour < 12)  //如果小于12则是凌晨0点到11:59，为上午
 244   2                      {
 245   3                              gblcd_am = 1;  //标志位为1，设置对应的LED是否亮起
 246   3                      }
 247   2                      else
 248   2                      {
 249   3                              gblcd_pm = 1; //如果大于12则是12:00到23:59，为下午//标志位为1，设置对应的LED是否亮起
 250   3                              tmpHour -= 12;//因为是12小时制，所以下午的时间也是12小时制显示，要减12
 251   3                      }
 252   2                      if (tmpHour == 0) //零点是显示12的，中午12点也是显示12的
 253   2                      {
 254   3                              tmpHour = 12;
 255   3                      }
 256   2                      DisplayNum12(tmpHour);
 257   2                      DisplayNum34(tmpMinute);
 258   2              }
 259   1      }
 260          
 261          /*******************************************************************************
 262           * 函数原型：
 263           * 输入参数：
 264           * 输出参数：
 265           * 函数功能：
 266           * 返回值说明：
 267           * 创建日期：
 268           * 创建人：
 269           * 修改日期
 270           * 修改人：
 271           * 第N次修改：
 272           * 修改原因：
 273           * 备注：
 274           *******************************************************************************/
 275          void Display_ALarm1(void)
 276          {
 277   1              gblcd_colon = 1;
 278   1              Display_HH_MM(eDS_AL1);
 279   1      }
 280          
 281          /*******************************************************************************
 282           * 函数原型：
 283           * 输入参数：
 284           * 输出参数：
 285           * 函数功能：
 286           * 返回值说明：
 287           * 创建日期：
 288           * 创建人：
 289           * 修改日期
 290           * 修改人：
 291           * 第N次修改：
 292           * 修改原因：
 293           * 备注：
 294           *******************************************************************************/
 295          void Display_SetAlarm1_Hour(void)
 296          {
 297   1              if ((gb0_5s) || (NoFlash()))
 298   1              {
 299   2                      gblcd_colon = 1;
 300   2                      Display_HH_MM(eDS_AL1);
C51 COMPILER V9.00   LED_MODE                                                              11/19/2018 17:14:21 PAGE 6   

 301   2              }
 302   1              else
 303   1              {
 304   2                      Display_MM(eDS_AL1);//让分钟LED常亮
 305   2              }
 306   1      }
 307          
 308          /*******************************************************************************
 309           * 函数原型：
 310           * 输入参数：
 311           * 输出参数：
 312           * 函数功能：
 313           * 返回值说明：
 314           * 创建日期：
 315           * 创建人：
 316           * 修改日期
 317           * 修改人：
 318           * 第N次修改：
 319           * 修改原因：
 320           * 备注：
 321           *******************************************************************************/
 322          void Display_SetAlarm1_Min(void)
 323          {
 324   1              if ((gb0_5s) || (NoFlash()))
 325   1              {
 326   2                      gblcd_colon = 1;
 327   2                      Display_HH_MM(eDS_AL1);
 328   2              }
 329   1              else
 330   1              {
 331   2                      Display_HH(eDS_AL1);//让小时LED常亮
 332   2              }
 333   1      }
 334          
 335          /*******************************************************************************
 336           * 函数原型：
 337           * 输入参数：
 338           * 输出参数：
 339           * 函数功能：
 340           * 返回值说明：
 341           * 创建日期：
 342           * 创建人：
 343           * 修改日期
 344           * 修改人：
 345           * 第N次修改：
 346           * 修改原因：
 347           * 备注：
 348           *******************************************************************************/
 349          void Display_SetAlarm1_Work(void)
 350          {
 351   1              Display_HH_MM(eDS_AL1);//让小时LED常亮
 352   1      }
 353          
 354          /*******************************************************************************
 355           * 函数原型：
 356           * 输入参数：
 357           * 输出参数：
 358           * 函数功能：设置闹钟时间显示，这里没有用到，用到的是Display_SetAlarm1_Hour()和
 359           *                       Display_SetAlarm1_Min()
 360           * 返回值说明：
 361           * 创建日期：
 362           * 创建人：
C51 COMPILER V9.00   LED_MODE                                                              11/19/2018 17:14:21 PAGE 7   

 363           * 修改日期
 364           * 修改人：
 365           * 第N次修改：
 366           * 修改原因：
 367           * 备注：
 368           *******************************************************************************/
 369          void Display_SetAlarm1(void)
 370          {
 371   1              if ((gb0_5s) || (NoFlash()))
 372   1              {
 373   2                      gblcd_colon = 1;
 374   2                      Display_HH_MM(eDS_AL1);
 375   2              }
 376   1      }
 377          
 378          /*******************************************************************************
 379           * 函数原型：
 380           * 输入参数：
 381           * 输出参数：
 382           * 函数功能：
 383           * 返回值说明：
 384           * 创建日期：
 385           * 创建人：
 386           * 修改日期
 387           * 修改人：
 388           * 第N次修改：
 389           * 修改原因：
 390           * 备注：
 391           *******************************************************************************/
 392          void Display_SetRTC_Hour(void)
 393          {
 394   1              if ((gb0_5s) || (NoFlash()))
 395   1              {
 396   2                      gblcd_colon = 1;
 397   2                      Display_HH_MM(eDS_RTC);
 398   2              }
 399   1              else
 400   1              {
 401   2                      Display_MM(eDS_RTC);//让分钟LED常亮
 402   2              }
 403   1      }
 404          
 405          /*******************************************************************************
 406           * 函数原型：
 407           * 输入参数：
 408           * 输出参数：
 409           * 函数功能：
 410           * 返回值说明：
 411           * 创建日期：
 412           * 创建人：
 413           * 修改日期
 414           * 修改人：
 415           * 第N次修改：
 416           * 修改原因：
 417           * 备注：
 418           *******************************************************************************/
 419          void Display_SetRTC_MIN(void)
 420          {
 421   1              if ((gb0_5s) || (NoFlash()))
 422   1              {
 423   2                      gblcd_colon = 1;
 424   2                      Display_HH_MM(eDS_RTC);
C51 COMPILER V9.00   LED_MODE                                                              11/19/2018 17:14:21 PAGE 8   

 425   2              }
 426   1              else
 427   1              {
 428   2                      Display_HH(eDS_RTC);//让小时LED常亮
 429   2              }
 430   1      }
 431          
 432          /*******************************************************************************
 433           * 函数原型：
 434           * 输入参数：
 435           * 输出参数：
 436           * 函数功能：
 437           * 返回值说明：
 438           * 创建日期：
 439           * 创建人：
 440           * 修改日期
 441           * 修改人：
 442           * 第N次修改：
 443           * 修改原因：
 444           * 备注：之所以gb0_5s大于0时才能进入if代码，是因为这个是设置RTC，要每隔0.5s闪烁，
 445           *       而cntNoFlash()是要常亮，比如在设置时时间在闪，但是要按下加或者减时要常
 446           *               亮1是，这样让设置的人看到，所以要gb0_5s为大于0和常亮时进入
 447           *******************************************************************************/
 448          void Display_SetRTC(void)
 449          {
 450   1              if ((gb0_5s) || (NoFlash()))
 451   1              {
 452   2                      gblcd_colon = 1;
 453   2                      Display_HH_MM(eDS_RTC);
 454   2              }
 455   1      }
 456          
 457          /*******************************************************************************
 458           * 函数原型：
 459           * 输入参数：
 460           * 输出参数：
 461           * 函数功能：
 462           * 返回值说明：
 463           * 创建日期：
 464           * 创建人：
 465           * 修改日期
 466           * 修改人：
 467           * 第N次修改：
 468           * 修改原因：
 469           * 备注：
 470           *******************************************************************************/
 471          void Display_RTC(void)
 472          {
 473   1              if ((!gbUser_AdjClk) || (gbHalfSecond))
 474   1              {
 475   2                      gblcd_colon = 1;
 476   2                      Display_HH_MM(eDS_RTC);
 477   2              }
 478   1      }
 479          
 480          /*******************************************************************************
 481           * 函数原型：
 482           * 输入参数：
 483           * 输出参数：
 484           * 函数功能：
 485           * 返回值说明：
 486           * 创建日期：
C51 COMPILER V9.00   LED_MODE                                                              11/19/2018 17:14:21 PAGE 9   

 487           * 创建人：
 488           * 修改日期
 489           * 修改人：
 490           * 第N次修改：
 491           * 修改原因：
 492           * 备注：
 493           *******************************************************************************/
 494          void Display_Zone(void) //什么意思
 495          {
 496   1              if ((gb0_5s) || (NoFlash()))
 497   1              {
 498   2                      DisplayNum34(gZone);
 499   2              }
 500   1      }
 501          
 502          /*******************************************************************************
 503           * 函数原型：
 504           * 输入参数：
 505           * 输出参数：
 506           * 函数功能：清除显示缓存
 507           * 返回值说明：
 508           * 创建日期：
 509           * 创建人：
 510           * 修改日期
 511           * 修改人：
 512           * 第N次修改：
 513           * 修改原因：
 514           * 备注：
 515           *******************************************************************************/
 516          void ClearDisplayBuff(void)
 517          {
 518   1              u8  clearCnt;
 519   1              for (clearCnt = 0; clearCnt < 5; clearCnt++)
 520   1              {
 521   2                      dispBuff[clearCnt] = eD_NONE;
 522   2              }
 523   1              lcd_BitRam0 = 0;
 524   1              lcd_BitRam1 = 0;
 525   1      }
 526          
 527          /*******************************************************************************
 528           * 函数原型：
 529           * 输入参数：
 530           * 输出参数：
 531           * 函数功能：
 532           * 返回值说明：
 533           * 创建日期：
 534           * 创建人：
 535           * 修改日期
 536           * 修改人：
 537           * 第N次修改：
 538           * 修改原因：
 539           * 备注：
 540           *******************************************************************************/
 541          void Display_Off(void)
 542          {
 543   1              DIG_NUM1 = eD_NONE;
 544   1              DIG_NUM2 = eD_O;
 545   1              DIG_NUM3 = eD_F;
 546   1              DIG_NUM4 = eD_F;
 547   1      }
 548          
C51 COMPILER V9.00   LED_MODE                                                              11/19/2018 17:14:21 PAGE 10  

 549          /*******************************************************************************
 550           * 函数原型：
 551           * 输入参数：
 552           * 输出参数：
 553           * 函数功能：
 554           * 返回值说明：
 555           * 创建日期：
 556           * 创建人：
 557           * 修改日期
 558           * 修改人：
 559           * 第N次修改：
 560           * 修改原因：
 561           * 备注：
 562           *******************************************************************************/
 563          void Display_Al1Flag(void)
 564          {
 565   1              if (Alarm1_TypeDef.Alarm_WorkMode == ALARM_BEEP)//闹钟响时的工作模式，
 566   1                      gblcd_buz1 = 1;//闹钟响时工作铃声为beep
 567   1              else if (Alarm1_TypeDef.Alarm_WorkMode == ALARM_BT)
 568   1              {
 569   2                      if ((Alarm1_TypeDef.Alarm_OnOff == ALARM_ON) && (Alarm1_TypeDef.Alarm_Snooze == ALARM_SNOOZE_OFF))
 570   2                      {
 571   3                              gblcd_bt = 1;//如果是蓝牙就显示蓝牙或者连接到蓝牙
 572   3                      }
 573   2                      else
 574   2                              gblcd_bt = 1;//如果是蓝牙就显示蓝牙或者连接到蓝牙
 575   2              }
 576   1      }
 577          
 578          /*******************************************************************************
 579           * 函数原型：
 580           * 输入参数：
 581           * 输出参数：
 582           * 函数功能：
 583           * 返回值说明：
 584           * 创建日期：
 585           * 创建人：
 586           * 修改日期
 587           * 修改人：
 588           * 第N次修改：
 589           * 修改原因：
 590           * 备注：
 591           *******************************************************************************/
 592          void UpdateDisplay(void)
 593          {
 594   1              switch (Flag_DispStatus)
 595   1              {
 596   2                      case DISP_AL1:
 597   2                              Display_ALarm1();   
 598   2                              break;
 599   2                      case ADJ_CLK:
 600   2                              Display_SetRTC(); //设置RTC时的显示
 601   2                              break;
 602   2                      case ADJ_CLK_HOUR:
 603   2                              Display_SetRTC_Hour();
 604   2                              break;
 605   2                      case ADJ_CLK_MIN:
 606   2                              Display_SetRTC_MIN();
 607   2                              break;
 608   2                      case ADJ_ZONE:
 609   2                              Display_Zone();
 610   2                              break; 
C51 COMPILER V9.00   LED_MODE                                                              11/19/2018 17:14:21 PAGE 11  

 611   2                      case ADJ_ALARM1:
 612   2                              Display_SetAlarm1(); //设置闹钟的显示
 613   2                              break;
 614   2                      case ADJ_ALARM1_HOUR:
 615   2                              Display_SetAlarm1_Hour(); //设置闹钟小时的显示
 616   2                              break; 
 617   2                      case ADJ_ALARM1_MIN:
 618   2                              Display_SetAlarm1_Min(); //设置闹钟分钟的显示
 619   2                              break; 
 620   2                      case ADJ_ALARM1_WORK:
 621   2                              Display_SetAlarm1_Work(); //设置闹钟分钟的显示
 622   2                              break;
 623   2                      case POWER_OFF_DISP:
 624   2                              Display_Off();
 625   2                              break; 
 626   2                      default:
 627   2                              Display_RTC();    //RTC走时状态显示
 628   2                              break;
 629   2              }
 630   1              if (cntNoFlash != 0)
 631   1                      cntNoFlash--;
 632   1      }
 633          
 634          /*******************************************************************************
 635           * 函数原型：
 636           * 输入参数：
 637           * 输出参数：
 638           * 函数功能：各种显示标志，比如两点(xx：xx)，buzz，am，pm
 639           * 返回值说明：
 640           * 创建日期：
 641           * 创建人：
 642           * 修改日期
 643           * 修改人：
 644           * 第N次修改：
 645           * 修改原因：
 646           * 备注：
 647           *******************************************************************************/
 648          void Display_Flag(void)
 649          {
 650   1              if (Flag_DispStatus == ADJ_CLK)
 651   1                      return;
 652   1              if(BT_LED_BLUE_DET())//上电之后会置起与mcu连接的这个端口，mcu检测蓝牙芯片是否置起
 653   1              {
 654   2                      /* 在设置闹钟的工作模式时，选择beep还是bt时，如果选择bt要让蓝牙标志闪烁，所以在这个设置状态下不能设置gbl
             -cd_bt */
 655   2                      if (FlagKSet_TypeDef != FLAG_KEYSET_SHORT_ALARM_ALWORKMODE)
 656   2                      {
 657   3                              //
 658   3                              gblcd_bt=1;//__BT_SET_LEDRED();//如果检测到蓝牙开机，就置起蓝灯
 659   3                      }
 660   2              }
 661   1              if ((Flag_DispStatus == ADJ_ALARM1_WORK) || (Alarm1_TypeDef.Alarm_OnOff == ALARM_ON))//显示状态为闹钟，并
             -且开启了闹钟
 662   1              {
 663   2                      if (Flag_DispStatus == ADJ_ALARM1_WORK)
 664   2                      {
 665   3                              if ((gb0_5s) || (NoFlash())) //NoFlash()不闪烁
 666   3                                      Display_Al1Flag();
 667   3                      }
 668   2                      else
 669   2                      {
 670   3                              gblcd_al=1;
C51 COMPILER V9.00   LED_MODE                                                              11/19/2018 17:14:21 PAGE 12  

 671   3                      }
 672   2              }
 673   1      }
 674          
 675          /*******************************************************************************
 676          * 函数原型：
 677          * 输入参数：
 678          * 输出参数：
 679          * 函数功能：设置显示状态为10s
 680          * 返回值说明：
 681          * 创建日期：
 682          * 创建人：
 683          * 修改日期
 684          * 修改人：
 685          * 第N次修改：
 686          * 修改原因：
 687          * 备注：
 688          *******************************************************************************/
 689          void SetDisplayState10s(uint8_t status)
 690          {
 691   1              Flag_DispStatus = status;
 692   1              cntDispStatus = cDISP_DELAY_10SEC;
 693   1      }
 694          
 695          /*******************************************************************************
 696           * 函数原型：
 697           * 输入参数：
 698           * 输出参数：
 699           * 函数功能：
 700           * 返回值说明：
 701           * 创建日期：
 702           * 创建人：
 703           * 修改日期
 704           * 修改人：
 705           * 第N次修改：
 706           * 修改原因：
 707           * 备注：
 708           *******************************************************************************/
 709          void Display(void)
 710          {
 711   1              u8  cnt;
 712   1              if ((gbUser_AdjClk) || (cntDispStatus))
 713   1              {
 714   2                      ClearDisplayBuff(); //先清除显示缓存
 715   2                      UpdateDisplay();//然后再更新状态显示
 716   2                      Display_Flag(); //
 717   2                      for (cnt = 0; cnt < 4; cnt++)
 718   2                      {
 719   3                              Led_Buffer[cnt] = dispCode_Arr[dispBuff[cnt]];//DIG_NUMx(1-4)赋值给dispBuff[]；
 720   3                      }
 721   2                      Display_LED();
 722   2              }
 723   1      }
 724          
 725           /*******************************************************************************
 726            * 函数原型：
 727            * 输入参数：
 728            * 输出参数：
 729            * 函数功能：只显示某一个标志位，其他的不显示，所以在端口输出哪里是"^"异或符号
 730            * 返回值说明：
 731            * 创建日期：
 732            * 创建人：
C51 COMPILER V9.00   LED_MODE                                                              11/19/2018 17:14:21 PAGE 13  

 733            * 修改日期
 734            * 修改人：
 735            * 第N次修改：
 736            * 修改原因：
 737            * 备注：
 738            *******************************************************************************/
 739          void Display_OnlyFlag(void)
 740          {
 741   1              if ((gbUser_AdjClk) || (cntDispStatus))
 742   1                      return;
 743   1              if (Alarm1_TypeDef.Alarm_OnOff == ALARM_ON)
 744   1              {
 745   2                      Display_Al1Flag();//调用闹钟1显示标志函数
 746   2                      if (gblcd_buz1)
 747   2                      {
 748   3                              //这里还没有写，不知道用不用,也不是很懂意思
 749   3                      }
 750   2                      if (gblcd_bt)
 751   2                      {
 752   3                              //这里还没有写，不知道用不用,也不是很懂意思
 753   3                      }
 754   2              }
 755   1      
 756   1      }
 757          
 758          
 759          
 760          
 761          
 762          
 763          
 764          
 765          
 766          
 767          
 768          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    614    ----
   CONSTANT SIZE    =     38    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
