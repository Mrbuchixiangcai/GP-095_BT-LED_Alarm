C51 COMPILER V9.00   LED_MODE                                                              11/24/2018 10:48:15 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LED_MODE
OBJECT MODULE PLACED IN .\Objects\LED_Mode.obj
COMPILER INVOKED BY: D:\ProgramFiles\Keil_v5\C51\BIN\C51.EXE App_User\Source\LED_Mode.c OPTIMIZE(8,SPEED) BROWSE INCDIR(
                    -.\Device;.\App_User\Include) DEBUG OBJECTEXTEND PRINT(.\Listings\LED_Mode.lst) OBJECT(.\Objects\LED_Mode.obj)

line level    source

   1          /*******************/
   2          /*头文件header file*/
   3          /*******************/
   4          #include "app_main.h"
   5          
   6          /************************/
   7          /*宏定义macro definition*/
   8          /************************/
   9          u8 dispBuff[5];
  10          #define DIG_NUM1 dispBuff[0]
  11          #define DIG_NUM2 dispBuff[1]
  12          #define DIG_NUM3 dispBuff[2]
  13          #define DIG_NUM4 dispBuff[3]
  14          #define DIG_NUM5 dispBuff[4]
  15          /*************************/
  16          /*类型定义byte definition*/
  17          /*************************/
  18          LED_BRIGHTNESS_TypeDef  LED_Brightness_TypeDef;
  19          ALRAM_TypeDef  Alarm1_TypeDef;
  20          ALRAM_TypeDef  BK_Alarm1_TypeDef;
  21          
  22          /****************************/
  23          /*标志位定义flags definetion*/
  24          /****************************/
  25          BOOL  gbDispSetA1;
  26          
  27          //变量定义
  28          u8 bdata lcd_BitRam0;
  29          u8 bdata lcd_BitRam1;
  30          
  31          sbit  gblcd_buz1   = lcd_BitRam0 ^ 0;
  32          sbit  gblcd_al     = lcd_BitRam0 ^ 1;//原来是gblcd_radio1
  33          sbit  gblcd_buz2   = lcd_BitRam0 ^ 2;
  34          sbit  gblcd_bt_tf  = lcd_BitRam0 ^ 3;//蓝牙开机有tf卡
  35          sbit  gblcd_dot    = lcd_BitRam0 ^ 4;//
  36          sbit  gblcd_colon  = lcd_BitRam0 ^ 5;//
  37          sbit  gblcd_sleep  = lcd_BitRam0 ^ 6;//
  38          sbit  gblcd_aux    = lcd_BitRam0 ^ 7;
  39          sbit  gblcd_am     = lcd_BitRam1 ^ 0;//
  40          sbit  gblcd_pm     = lcd_BitRam1 ^ 1;//
  41          sbit  gblcd_fm     = lcd_BitRam1 ^ 2;
  42          sbit  gblcd_mw     = lcd_BitRam1 ^ 3;
  43          sbit  gblcd_mhz    = lcd_BitRam1 ^ 4;
  44          sbit  gblcd_khz    = lcd_BitRam1 ^ 5;
  45          sbit  gblcd_five   = lcd_BitRam1 ^ 6;
  46          sbit  gblcd_bt     = lcd_BitRam1 ^ 7;//蓝牙开启没有tf卡
  47          //                                                                                                        
             -                                                                                                                        
             -           sbit  gblcd_al        = lcd_BitRam1 ^ 7; //al:alarm
  48          /*****************************/
  49          /*变量定义variable definition*/
  50          /*****************************/
  51          
  52          
C51 COMPILER V9.00   LED_MODE                                                              11/24/2018 10:48:15 PAGE 2   

  53          /**************************/
  54          /*数组定义array definition*/
  55          /**************************/
  56          code u8 dispCode_Arr[]=  //arr:array
  57          {
  58                  DIG_0,DIG_1,DIG_2,DIG_3,DIG_4,DIG_5,DIG_6,DIG_7,DIG_8,DIG_9,DIG_NONE,           //数字
  59                  CH_a,CH_b,CH_c,CH_d,CH_h,CH_l,CH_n,CH_o,CH_r,CH_t,CH_u,CH_y,                            //小写字母
  60                  CH_A,CH_C,CH_E,CH_F,CH_G,CH_H,CH_I,CH_J,CH_L,CH_N,CH_O,CH_P,CH_S,CH_U,CH__,     //大写字母
  61          };
  62          
  63          /******************************/
  64          /*函数声明Function declaration*/
  65          /******************************/
  66          
  67          /*****************************/
  68          /*函数定义function definetion*/
  69          /*****************************/
  70          /*******************************************************************************
  71           * 函数原型：
  72           * 输入参数：
  73           * 输出参数：
  74           * 函数功能：关闹钟函数，做成函数是因为要几个地方用到，代码多
  75           * 返回值说明：
  76           * 创建日期：
  77           * 创建人：
  78           * 修改日期
  79           * 修改人：
  80           * 第N次修改：
  81           * 修改原因：
  82           * 备注：
  83           *******************************************************************************/
  84          void Alarm1_PowerOFF(void)
  85          {
  86   1              Alarm1_TypeDef.Alarm_OnOff = ALARM_OFF;//关闹钟
  87   1              Alarm1_TypeDef.Alarm_RingRun=ALARM_RING_RUN_OFF;//关置为没有在运行模式
  88   1              Alarm1_TypeDef.Alarm_Snooze = ALARM_SNOOZE_OFF;//置为非贪睡模式
  89   1              cntAlarm_Runing_60Min=0;
  90   1              if(Alarm1_TypeDef.Alarm_WorkMode==ALARM_BT)
  91   1              {
  92   2                      Flag_BT_Play=0;
  93   2                      bt_cmd=BT_PAUSE;//如果是蓝牙模式就暂停播放
  94   2              }
  95   1      }
  96          
  97          /*******************************************************************************
  98           * 函数原型：
  99           * 输入参数：
 100           * 输出参数：
 101           * 函数功能：把要更新的值赋给DIG_NUMx，
 102           * 返回值说明：
 103           * 创建日期：
 104           * 创建人：
 105           * 修改日期
 106           * 修改人：
 107           * 第N次修改：
 108           * 修改原因：
 109           * 备注：把要更新的值赋给DIG_NUMx，然后相当于赋值给了dispBuff[x]，dispBuff被调用
 110           *               在Led_Buffer[i] = dispCode_Arr[dispBuff[i]]这里被赋给个Led_Buffer,
 111           *               Led_Buffer会被与上一次调用Led_Buffer时判断，，然后置位相应的LED端口。
 112           *******************************************************************************/
 113          void DisplayNum12(u8 dat)
 114          {
C51 COMPILER V9.00   LED_MODE                                                              11/24/2018 10:48:15 PAGE 3   

 115   1              DIG_NUM1 = (dat / 10); //相当于赋值给了dispBuff[0]，最后判断是否与对应的LED，
 116   1              DIG_NUM2 = (dat % 10);
 117   1              if (!DIG_NUM1)
 118   1                      DIG_NUM1 = eD_NONE;
 119   1      }
 120          
 121          /*******************************************************************************
 122           * 函数原型：
 123           * 输入参数：
 124           * 输出参数：
 125           * 函数功能：
 126           * 返回值说明：
 127           * 创建日期：
 128           * 创建人：
 129           * 修改日期
 130           * 修改人：
 131           * 第N次修改：
 132           * 修改原因：
 133           * 备注：
 134           *******************************************************************************/
 135          void DisplayNum34(u8 dat)
 136          {
 137   1              DIG_NUM3 = (dat / 10);
 138   1              DIG_NUM4 = (dat % 10);
 139   1      }
 140          
 141          /*******************************************************************************
 142           * 函数原型：
 143           * 输入参数：
 144           * 输出参数：
 145           * 函数功能：
 146           * 返回值说明：
 147           * 创建日期：
 148           * 创建人：
 149           * 修改日期
 150           * 修改人：
 151           * 第N次修改：
 152           * 修改原因：
 153           * 备注：
 154           *******************************************************************************/
 155          BOOL NoFlash(void)
 156          {
 157   1              if (cntNoFlash != 0)
 158   1              {
 159   2                      //cntNoFlash--;
 160   2                      return 1;
 161   2              }
 162   1              return 0;
 163   1      }
 164          
 165          /*******************************************************************************
 166           * 函数原型：
 167           * 输入参数：
 168           * 输出参数：
 169           * 函数功能：
 170           * 返回值说明：
 171           * 创建日期：
 172           * 创建人：
 173           * 修改日期
 174           * 修改人：
 175           * 第N次修改：
 176           * 修改原因：
C51 COMPILER V9.00   LED_MODE                                                              11/24/2018 10:48:15 PAGE 4   

 177           * 备注：
 178           *******************************************************************************/
 179          void Display_HH(u8 hh_mm_TypeDef)
 180          {
 181   1              u8  tmpHour;
 182   1              switch (hh_mm_TypeDef)
 183   1              {
 184   2                      case eDS_RTC:
 185   2                              tmpHour=gRTC_Hour;
 186   2                              break;
 187   2                      case ADJ_CLK:
 188   2                              tmpHour=Time_Temp_TypeDef.temp_RTC_Hour;
 189   2                              break;
 190   2                      case eDS_AL1:
 191   2                              tmpHour = Alarm1_TypeDef.tempHour;
 192   2                              break;
 193   2              }
 194   1              if (gb12HourDisp)//12小时制显示
 195   1              {
 196   2                      if (tmpHour < 12)  //如果小于12则是凌晨0点到11:59，为上午
 197   2                      {
 198   3                              gblcd_am = 1;  //标志位为1，设置对应的LED是否亮起
 199   3                      }
 200   2                      else
 201   2                      {
 202   3                              gblcd_pm = 1; //如果大于12则是12:00到23:59，为下午//标志位为1，设置对应的LED是否亮起
 203   3                              tmpHour -= 12;//因为是12小时制，所以下午的时间也是12小时制显示，要减12
 204   3                      }
 205   2                      if (tmpHour == 0) //零点是显示12的，中午12点也是显示12的
 206   2                      {
 207   3                              tmpHour = 12;
 208   3                      }
 209   2                      DisplayNum12(tmpHour);
 210   2              }
 211   1      }
 212          
 213          /*******************************************************************************
 214           * 函数原型：
 215           * 输入参数：
 216           * 输出参数：
 217           * 函数功能：
 218           * 返回值说明：
 219           * 创建日期：
 220           * 创建人：
 221           * 修改日期
 222           * 修改人：
 223           * 第N次修改：
 224           * 修改原因：
 225           * 备注：
 226           *******************************************************************************/
 227          void Display_MM(u8 hh_mm_TypeDef)
 228          {
 229   1              u8  tmpMinute;
 230   1              switch (hh_mm_TypeDef)
 231   1              {
 232   2                      case eDS_RTC:
 233   2                              tmpMinute=gRTC_Minute;
 234   2                              break;
 235   2                      case ADJ_CLK:
 236   2                              tmpMinute=Time_Temp_TypeDef.temp_RTC_Minute;
 237   2                              break;
 238   2                      case eDS_AL1:
C51 COMPILER V9.00   LED_MODE                                                              11/24/2018 10:48:15 PAGE 5   

 239   2                              tmpMinute = Alarm1_TypeDef.tempMinute;
 240   2                              break;
 241   2              }
 242   1              DisplayNum34(tmpMinute);
 243   1      }
 244          
 245          /*******************************************************************************
 246           * 函数原型：
 247           * 输入参数：
 248           * 输出参数：
 249           * 函数功能：
 250           * 返回值说明：
 251           * 创建日期：
 252           * 创建人：
 253           * 修改日期
 254           * 修改人：
 255           * 第N次修改：
 256           * 修改原因：
 257           * 备注：
 258           *******************************************************************************/
 259          uint8_t tempHour;
 260          void Display_HH_MM(u8 hh_mm_TypeDef)
 261          {
 262   1              u8  tmpHour, tmpMinute;
 263   1              switch (hh_mm_TypeDef)
 264   1              {
 265   2                      case eDS_RTC:
 266   2                              tmpHour=gRTC_Hour;
 267   2                              tmpMinute=gRTC_Minute;
 268   2                              break;
 269   2                      case ADJ_CLK:
 270   2                              tmpHour=Time_Temp_TypeDef.temp_RTC_Hour;
 271   2                              tmpMinute=Time_Temp_TypeDef.temp_RTC_Minute;
 272   2                              break;
 273   2                      case eDS_AL1:
 274   2                              tmpHour = Alarm1_TypeDef.tempHour;
 275   2                              tmpMinute = Alarm1_TypeDef.tempMinute;
 276   2                              break;
 277   2              }
 278   1              if (gb12HourDisp)//12小时制显示
 279   1              {
 280   2                      if(tmpHour>=10)
 281   2                      {
 282   3                              tempHour=tmpHour;
 283   3                      }
 284   2                      if (tmpHour < 12)  //如果小于12则是凌晨0点到11:59，为上午
 285   2                      {
 286   3                              gblcd_am = 1;  //标志位为1，设置对应的LED是否亮起
 287   3                      }
 288   2                      else
 289   2                      {
 290   3                              gblcd_pm = 1; //如果大于12则是12:00到23:59，为下午//标志位为1，设置对应的LED是否亮起
 291   3                              tmpHour -= 12;//因为是12小时制，所以下午的时间也是12小时制显示，要减12
 292   3                      }
 293   2                      if (tmpHour == 0) //零点是显示12的，中午12点也是显示12的
 294   2                      {
 295   3                              tmpHour = 12;
 296   3                      }
 297   2                      DisplayNum12(tmpHour);
 298   2                      DisplayNum34(tmpMinute);
 299   2              }
 300   1      }
C51 COMPILER V9.00   LED_MODE                                                              11/24/2018 10:48:15 PAGE 6   

 301          
 302          /*******************************************************************************
 303           * 函数原型：
 304           * 输入参数：
 305           * 输出参数：
 306           * 函数功能：
 307           * 返回值说明：
 308           * 创建日期：
 309           * 创建人：
 310           * 修改日期
 311           * 修改人：
 312           * 第N次修改：
 313           * 修改原因：
 314           * 备注：
 315           *******************************************************************************/
 316          void Display_ALarm1_Sonnze(void)
 317          {
 318   1              if ((gb0_5s) || (NoFlash()))
 319   1              {
 320   2                      
 321   2              }
 322   1      }
 323          
 324          /*******************************************************************************
 325           * 函数原型：
 326           * 输入参数：
 327           * 输出参数：
 328           * 函数功能：
 329           * 返回值说明：
 330           * 创建日期：
 331           * 创建人：
 332           * 修改日期
 333           * 修改人：
 334           * 第N次修改：
 335           * 修改原因：
 336           * 备注：
 337           *******************************************************************************/
 338          void Display_ALarm1(void)
 339          {
 340   1              gblcd_colon = 1;
 341   1              Display_HH_MM(eDS_AL1);
 342   1      }
 343          
 344          /*******************************************************************************
 345           * 函数原型：
 346           * 输入参数：
 347           * 输出参数：
 348           * 函数功能：
 349           * 返回值说明：
 350           * 创建日期：
 351           * 创建人：
 352           * 修改日期
 353           * 修改人：
 354           * 第N次修改：
 355           * 修改原因：
 356           * 备注：
 357           *******************************************************************************/
 358          void Display_SetAlarm1_Hour(void)
 359          {
 360   1              if ((gb0_5s) || (NoFlash()))
 361   1              {
 362   2                      gblcd_colon = 1;
C51 COMPILER V9.00   LED_MODE                                                              11/24/2018 10:48:15 PAGE 7   

 363   2                      Display_HH_MM(eDS_AL1);
 364   2              }
 365   1              else
 366   1              {
 367   2                      Display_MM(eDS_AL1);//让分钟LED常亮
 368   2              }
 369   1      }
 370          
 371          /*******************************************************************************
 372           * 函数原型：
 373           * 输入参数：
 374           * 输出参数：
 375           * 函数功能：
 376           * 返回值说明：
 377           * 创建日期：
 378           * 创建人：
 379           * 修改日期
 380           * 修改人：
 381           * 第N次修改：
 382           * 修改原因：
 383           * 备注：
 384           *******************************************************************************/
 385          void Display_SetAlarm1_Min(void)
 386          {
 387   1              if ((gb0_5s) || (NoFlash()))
 388   1              {
 389   2                      gblcd_colon = 1;
 390   2                      Display_HH_MM(eDS_AL1);
 391   2              }
 392   1              else
 393   1              {
 394   2                      Display_HH(eDS_AL1);//让小时LED常亮
 395   2              }
 396   1      }
 397          
 398          /*******************************************************************************
 399           * 函数原型：
 400           * 输入参数：
 401           * 输出参数：
 402           * 函数功能：
 403           * 返回值说明：
 404           * 创建日期：
 405           * 创建人：
 406           * 修改日期
 407           * 修改人：
 408           * 第N次修改：
 409           * 修改原因：
 410           * 备注：
 411           *******************************************************************************/
 412          void Display_SetAlarm1_Work(void)
 413          {
 414   1              //这里的放在了Display_Flag()函数
 415   1      //      if ((gb0_5s) || (NoFlash()))
 416   1      //      {
 417   1      //              Display_HH_MM(eDS_AL1);//
 418   1      //      }
 419   1      }
 420          
 421          /*******************************************************************************
 422           * 函数原型：
 423           * 输入参数：
 424           * 输出参数：
C51 COMPILER V9.00   LED_MODE                                                              11/24/2018 10:48:15 PAGE 8   

 425           * 函数功能：设置闹钟时间显示，这里没有用到，用到的是Display_SetAlarm1_Hour()和
 426           *                       Display_SetAlarm1_Min()
 427           * 返回值说明：
 428           * 创建日期：
 429           * 创建人：
 430           * 修改日期
 431           * 修改人：
 432           * 第N次修改：
 433           * 修改原因：
 434           * 备注：
 435           *******************************************************************************/
 436          void Display_SetAlarm1(void)
 437          {
 438   1              if ((gb0_5s) || (NoFlash()))
 439   1              {
 440   2                      gblcd_colon = 1;
 441   2                      Display_HH_MM(eDS_AL1);
 442   2              }
 443   1      }
 444          
 445          /*******************************************************************************
 446           * 函数原型：
 447           * 输入参数：
 448           * 输出参数：
 449           * 函数功能：
 450           * 返回值说明：
 451           * 创建日期：
 452           * 创建人：
 453           * 修改日期
 454           * 修改人：
 455           * 第N次修改：
 456           * 修改原因：
 457           * 备注：
 458           *******************************************************************************/
 459          void Display_SetRTC_Hour(void)
 460          {
 461   1              if ((gb0_5s) || (NoFlash()))
 462   1              {
 463   2                      gblcd_colon = 1;
 464   2                      Display_HH_MM(ADJ_CLK);
 465   2              }
 466   1              else
 467   1              {
 468   2                      Display_MM(ADJ_CLK);//让分钟LED常亮
 469   2              }
 470   1      }
 471          
 472          /*******************************************************************************
 473           * 函数原型：
 474           * 输入参数：
 475           * 输出参数：
 476           * 函数功能：
 477           * 返回值说明：
 478           * 创建日期：
 479           * 创建人：
 480           * 修改日期
 481           * 修改人：
 482           * 第N次修改：
 483           * 修改原因：
 484           * 备注：
 485           *******************************************************************************/
 486          void Display_SetRTC_MIN(void)
C51 COMPILER V9.00   LED_MODE                                                              11/24/2018 10:48:15 PAGE 9   

 487          {
 488   1              if ((gb0_5s) || (NoFlash()))
 489   1              {
 490   2                      gblcd_colon = 1;
 491   2                      Display_HH_MM(ADJ_CLK);
 492   2              }
 493   1              else
 494   1              {
 495   2                      Display_HH(ADJ_CLK);//让小时LED常亮
 496   2              }
 497   1      }
 498          
 499          /*******************************************************************************
 500           * 函数原型：
 501           * 输入参数：
 502           * 输出参数：
 503           * 函数功能：
 504           * 返回值说明：
 505           * 创建日期：
 506           * 创建人：
 507           * 修改日期
 508           * 修改人：
 509           * 第N次修改：
 510           * 修改原因：
 511           * 备注：之所以gb0_5s大于0时才能进入if代码，是因为这个是设置RTC，要每隔0.5s闪烁，
 512           *       而cntNoFlash()是要常亮，比如在设置时时间在闪，但是要按下加或者减时要常
 513           *               亮1是，这样让设置的人看到，所以要gb0_5s为大于0和常亮时进入
 514           *******************************************************************************/
 515          void Display_SetRTC(void)
 516          {
 517   1              if ((gb0_5s) || (NoFlash()))
 518   1              {
 519   2                      gblcd_colon = 1;
 520   2                      Display_HH_MM(ADJ_CLK);
 521   2              }
 522   1      }
 523          
 524          /*******************************************************************************
 525           * 函数原型：
 526           * 输入参数：
 527           * 输出参数：
 528           * 函数功能：
 529           * 返回值说明：
 530           * 创建日期：
 531           * 创建人：
 532           * 修改日期
 533           * 修改人：
 534           * 第N次修改：
 535           * 修改原因：
 536           * 备注：
 537           *******************************************************************************/
 538          void Display_RTC(void)
 539          {
 540   1              if ((gbUser_AdjClk) || (gbHalfSecond))
 541   1              {
 542   2                      gblcd_colon = 1;
 543   2                      Display_HH_MM(eDS_RTC);
 544   2              }
 545   1      }
 546          
 547          /*******************************************************************************
 548           * 函数原型：
C51 COMPILER V9.00   LED_MODE                                                              11/24/2018 10:48:15 PAGE 10  

 549           * 输入参数：
 550           * 输出参数：
 551           * 函数功能：
 552           * 返回值说明：
 553           * 创建日期：
 554           * 创建人：
 555           * 修改日期
 556           * 修改人：
 557           * 第N次修改：
 558           * 修改原因：
 559           * 备注：
 560           *******************************************************************************/
 561          void Display_Zone(void) //什么意思
 562          {
 563   1              if ((gb0_5s) || (NoFlash()))
 564   1              {
 565   2                      DisplayNum34(gZone);
 566   2              }
 567   1      }
 568          
 569          /*******************************************************************************
 570           * 函数原型：
 571           * 输入参数：
 572           * 输出参数：
 573           * 函数功能：清除显示缓存
 574           * 返回值说明：
 575           * 创建日期：
 576           * 创建人：
 577           * 修改日期
 578           * 修改人：
 579           * 第N次修改：
 580           * 修改原因：
 581           * 备注：
 582           *******************************************************************************/
 583          void ClearDisplayBuff(void)
 584          {
 585   1              u8  clearCnt;
 586   1              for (clearCnt = 0; clearCnt < 5; clearCnt++)
 587   1              {
 588   2                      dispBuff[clearCnt] = eD_NONE;
 589   2              }
 590   1              if((Flag_DispStatus != ADJ_ALARM1_WORK) && (Alarm1_TypeDef.Alarm_RingRun != ALARM_RING_RUN_ON) && (FlagKS
             -et_TypeDef == FLAG_KEYSET_OFF))
 591   1                      lcd_BitRam0 &= 0x10;//不清除点的标志位
 592   1              else if((Alarm1_TypeDef.Alarm_Snooze == ALARM_SNOOZE_ON) && (Alarm1_TypeDef.Alarm_RingRun == ALARM_RING_R
             -UN_ON))
 593   1                      lcd_BitRam0 &= 0x10;//不清除点的标志位
 594   1              else
 595   1                      lcd_BitRam0=0;
 596   1              lcd_BitRam1 = 0;
 597   1      }
 598          
 599          /*******************************************************************************
 600           * 函数原型：
 601           * 输入参数：
 602           * 输出参数：
 603           * 函数功能：
 604           * 返回值说明：
 605           * 创建日期：
 606           * 创建人：
 607           * 修改日期
 608           * 修改人：
C51 COMPILER V9.00   LED_MODE                                                              11/24/2018 10:48:15 PAGE 11  

 609           * 第N次修改：
 610           * 修改原因：
 611           * 备注：
 612           *******************************************************************************/
 613          void Display_Off(void)
 614          {
 615   1              DIG_NUM1 = eD_NONE;
 616   1              DIG_NUM2 = eD_O;
 617   1              DIG_NUM3 = eD_F;
 618   1              DIG_NUM4 = eD_F;
 619   1      }
 620          
 621          /*******************************************************************************
 622           * 函数原型：
 623           * 输入参数：
 624           * 输出参数：
 625           * 函数功能：
 626           * 返回值说明：
 627           * 创建日期：
 628           * 创建人：
 629           * 修改日期
 630           * 修改人：
 631           * 第N次修改：
 632           * 修改原因：
 633           * 备注：
 634           *******************************************************************************/
 635          void Display_Al1Flag(void)
 636          {
 637   1              if (Alarm1_TypeDef.Alarm_WorkMode == ALARM_BEEP)//闹钟响时的工作模式，
 638   1                      gblcd_buz1 = 1;//闹钟响时工作铃声为beep
 639   1              else if (Alarm1_TypeDef.Alarm_WorkMode == ALARM_BT)
 640   1              {
 641   2                      if ((Alarm1_TypeDef.Alarm_OnOff == ALARM_ON) && (Alarm1_TypeDef.Alarm_Snooze == ALARM_SNOOZE_OFF))
 642   2                      {
 643   3                              gblcd_bt = 1;//如果是蓝牙就显示蓝牙或者连接到蓝牙
 644   3                      }
 645   2                      else
 646   2                              gblcd_bt = 1;//如果是蓝牙就显示蓝牙或者连接到蓝牙
 647   2              }
 648   1      }
 649          
 650          /*******************************************************************************
 651           * 函数原型：
 652           * 输入参数：
 653           * 输出参数：
 654           * 函数功能：
 655           * 返回值说明：
 656           * 创建日期：
 657           * 创建人：
 658           * 修改日期
 659           * 修改人：
 660           * 第N次修改：
 661           * 修改原因：
 662           * 备注：
 663           *******************************************************************************/
 664          void UpdateDisplay(void)
 665          {
 666   1              switch (Flag_DispStatus)
 667   1              {
 668   2                      case DISP_AL1:
 669   2                              Display_ALarm1();   
 670   2                              break;
C51 COMPILER V9.00   LED_MODE                                                              11/24/2018 10:48:15 PAGE 12  

 671   2                      case ADJ_CLK:
 672   2                              Display_SetRTC(); //设置RTC时的显示
 673   2                              break;
 674   2                      case ADJ_CLK_HOUR:
 675   2                              Display_SetRTC_Hour();
 676   2                              break;
 677   2                      case ADJ_CLK_MIN:
 678   2                              Display_SetRTC_MIN();
 679   2                              break;
 680   2                      case ADJ_ZONE:
 681   2                              Display_Zone();
 682   2                              break; 
 683   2                      case ADJ_ALARM1:
 684   2                              Display_SetAlarm1(); //设置闹钟的显示
 685   2                              break;
 686   2                      case ADJ_ALARM1_HOUR:
 687   2                              Display_SetAlarm1_Hour(); //设置闹钟小时的显示
 688   2                              break; 
 689   2                      case ADJ_ALARM1_MIN:
 690   2                              Display_SetAlarm1_Min(); //设置闹钟分钟的显示
 691   2                              break; 
 692   2                      case ADJ_ALARM1_WORK:
 693   2                              Display_SetAlarm1_Work(); //设置闹钟分钟的显示
 694   2                              break;
 695   2                      case POWER_OFF_DISP:
 696   2                              Display_Off();
 697   2                              break; 
 698   2                      default:
 699   2                              Display_RTC();    //RTC走时状态显示
 700   2                              break;
 701   2              }
 702   1              if (cntNoFlash != 0)
 703   1                      cntNoFlash--;
 704   1      }
 705          
 706          /*******************************************************************************
 707           * 函数原型：
 708           * 输入参数：
 709           * 输出参数：
 710           * 函数功能：各种显示标志，比如两点(xx：xx)，buzz，am，pm
 711           * 返回值说明：
 712           * 创建日期：
 713           * 创建人：
 714           * 修改日期
 715           * 修改人：
 716           * 第N次修改：
 717           * 修改原因：
 718           * 备注：
 719           *******************************************************************************/
 720          uint8_t temp1,temp2;
 721          void Display_Flag(void)
 722          {
 723   1              if (Flag_DispStatus == ADJ_CLK)
 724   1                      return;
 725   1              temp1=BT_LED_BLUE_DET();
 726   1              temp2=BT_LED_RED_DET();
 727   1              if((BT_LED_BLUE_DET()) || (BT_LED_RED_DET()))//上电之后会置起与mcu连接的这个端口，mcu检测蓝牙芯片是否上电
 728   1              {                                                                                  //并检测是蓝牙模式还是TF卡模式
 729   2                      /* 在设置闹钟的工作模式时，选择beep还是bt时，如果选择bt要让蓝牙标志闪烁，所以在这个设置状态下不能设置gbl
             -cd_bt */
 730   2                      if (FlagKSet_TypeDef != FLAG_KEYSET_SHORT_ALARM_ALWORKMODE)
 731   2                      {
C51 COMPILER V9.00   LED_MODE                                                              11/24/2018 10:48:15 PAGE 13  

 732   3                              if(Music_Mode_TypeDef==MUSIC_BT)
 733   3                              {
 734   4                                      gblcd_bt=1;//__BT_SET_LEDRED();//如果检测到蓝牙开机并且没有TF卡，就置起蓝灯
 735   4                                      gblcd_bt_tf=0;
 736   4                              }
 737   3                              else if(Music_Mode_TypeDef==MUSIC_TF)
 738   3                              {
 739   4                                      gblcd_bt_tf=1;//如果检测到蓝牙开机并且有TF卡，就置起红灯
 740   4                                      gblcd_bt=0;
 741   4                              }
 742   3                      }
 743   2              }
 744   1              if ((Flag_DispStatus == ADJ_ALARM1_WORK) || (Alarm1_TypeDef.Alarm_OnOff == ALARM_ON))//显示状态为闹钟，并
             -且开启了闹钟
 745   1              {
 746   2                      if (Flag_DispStatus == ADJ_ALARM1_WORK)//这里是设置闹钟工作模式
 747   2                      {
 748   3                              if ((gb0_5s) || (NoFlash())) //NoFlash()不闪烁
 749   3                              {
 750   4                                      Display_Al1Flag();
 751   4                                      Display_HH_MM(eDS_AL1);//
 752   4                              }
 753   3                              gblcd_al=1;//因为进来这里，就不能进去下面的else，所以在设置时蓝牙标志就不亮，这里就是在设置蓝牙
 754   3                                                 //工作模式时也亮蓝牙标志
 755   3                      }
 756   2                      if(Alarm1_TypeDef.Alarm_Snooze == ALARM_SNOOZE_ON)//贪睡模式下Alarm标志闪烁
 757   2                      {
 758   3                              gblcd_al=gblcd_dot;
 759   3                      }
 760   2                      else
 761   2                      {
 762   3                              gblcd_al=1;
 763   3                      }
 764   2              }
 765   1      }
 766          
 767          /*******************************************************************************
 768          * 函数原型：
 769          * 输入参数：
 770          * 输出参数：
 771          * 函数功能：设置显示状态为10s
 772          * 返回值说明：
 773          * 创建日期：
 774          * 创建人：
 775          * 修改日期
 776          * 修改人：
 777          * 第N次修改：
 778          * 修改原因：
 779          * 备注：
 780          *******************************************************************************/
 781          void SetDisplayState10s(uint8_t status)
 782          {
 783   1              Flag_DispStatus = status;
 784   1              cntDispStatus = cDISP_DELAY_10SEC;
 785   1      }
 786          
 787          /*******************************************************************************
 788           * 函数原型：
 789           * 输入参数：
 790           * 输出参数：
 791           * 函数功能：
 792           * 返回值说明：
C51 COMPILER V9.00   LED_MODE                                                              11/24/2018 10:48:15 PAGE 14  

 793           * 创建日期：
 794           * 创建人：
 795           * 修改日期
 796           * 修改人：
 797           * 第N次修改：
 798           * 修改原因：
 799           * 备注：
 800           *******************************************************************************/
 801          void Display(void)
 802          {
 803   1              u8  cnt;
 804   1              if ((gbUser_AdjClk) || (cntDispStatus))
 805   1              {
 806   2                      ClearDisplayBuff(); //先清除显示缓存
 807   2                      UpdateDisplay();//然后再更新状态显示
 808   2                      Display_Flag(); //
 809   2                      for (cnt = 0; cnt < 4; cnt++)
 810   2                      {
 811   3                              Led_Buffer[cnt] = dispCode_Arr[dispBuff[cnt]];//DIG_NUMx(1-4)赋值给dispBuff[]；
 812   3                      }
 813   2                      Display_LED();
 814   2              }
 815   1      }
 816          
 817           /*******************************************************************************
 818            * 函数原型：
 819            * 输入参数：
 820            * 输出参数：
 821            * 函数功能：只显示某一个标志位，其他的不显示，所以在端口输出哪里是"^"异或符号
 822            * 返回值说明：
 823            * 创建日期：
 824            * 创建人：
 825            * 修改日期
 826            * 修改人：
 827            * 第N次修改：
 828            * 修改原因：
 829            * 备注：
 830            *******************************************************************************/
 831          void Display_OnlyFlag(void)
 832          {
 833   1              if ((gbUser_AdjClk) || (cntDispStatus))
 834   1                      return;
 835   1              if (Alarm1_TypeDef.Alarm_OnOff == ALARM_ON)
 836   1              {
 837   2                      Display_Al1Flag();//调用闹钟1显示标志函数
 838   2                      if (gblcd_buz1)
 839   2                      {
 840   3                              //这里还没有写，不知道用不用,也不是很懂意思
 841   3                      }
 842   2                      if (gblcd_bt)
 843   2                      {
 844   3                              //这里还没有写，不知道用不用,也不是很懂意思
 845   3                      }
 846   2              }
 847   1      
 848   1      }
 849          
 850          
 851          
 852          
 853          
 854          
C51 COMPILER V9.00   LED_MODE                                                              11/24/2018 10:48:15 PAGE 15  

 855          
 856          
 857          
 858          
 859          
 860          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    751    ----
   CONSTANT SIZE    =     38    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
