C51 COMPILER V9.00   KEY_MODE                                                              11/06/2018 12:14:57 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE KEY_MODE
OBJECT MODULE PLACED IN .\Objects\Key_Mode.obj
COMPILER INVOKED BY: D:\ProgramFiles\Keil_v5\C51\BIN\C51.EXE App_User\Source\Key_Mode.c OPTIMIZE(8,SPEED) BROWSE INCDIR(
                    -.\Device;.\App_User\Include) DEBUG OBJECTEXTEND PRINT(.\Listings\Key_Mode.lst) OBJECT(.\Objects\Key_Mode.obj)

line level    source

   1          /*******************/
   2          /*Í·ÎÄ¼þheader file*/
   3          /*******************/
   4          #include "app_main.h"
   5          
   6          /************************/
   7          /*ºê¶¨Òåmacro definition*/
   8          /************************/
   9          
  10          /*************************/
  11          /*ÀàÐÍ¶¨Òåbyte definition*/
  12          /*************************/
  13          
  14          /****************************/
  15          /*±êÖ¾Î»¶¨Òåflags definetion*/
  16          /****************************/
  17          
  18          /*****************************/
  19          /*±äÁ¿¶¨Òåvariable definition*/
  20          /*****************************/
  21          uint8_t  gbKeyPress;//°´¼ü°´ÏÂ
  22          uint8_t  gbKeyNone; //Ã»ÓÐ°´¼ü°´ÏÂ
  23          uint8_t  KeyValue;  //°´¼üÖµ
  24          uint8_t  KeyEvent;  //°´¼üÊÂ¼þ
  25          uint8_t  cntKeyLoop;//¼ÆÊý°´¼üÑ­»·£¬¶Ì°´£¬³¤°´£¬³¬³¤°´µÄ°´ÏÂÊ±¼ä
  26          uint8_t  cntKeylong;
  27          uint8_t  KeyCurValueBK;//ÏÖÔÚ°´¼ü±¸·Ý
  28          uint8_t  KeyCurValue;//°´¼üÏÖÔÚÖµ
  29          uint8_t  KeyLastValue;//°´¼üÉÏÒ»´ÎµÄÖµ
  30          /**************************/
  31          /*Êý×é¶¨Òåarray definition*/
  32          /**************************/
  33          
  34          /******************************/
  35          /*º¯ÊýÉùÃ÷Function declaration*/
  36          /******************************/
  37          
  38          /*****************************/
  39          /*º¯Êý¶¨Òåfunction definetion*/
  40          /*****************************/
  41          /*******************************************************************************
  42           * º¯ÊýÔ­ÐÍ£º
  43           * ÊäÈë²ÎÊý£º
  44           * Êä³ö²ÎÊý£º
  45           * º¯Êý¹¦ÄÜ£º
  46           * ·µ»ØÖµËµÃ÷£º
  47           * ´´½¨ÈÕÆÚ£º
  48           * ´´½¨ÈË£º
  49           * ÐÞ¸ÄÈÕÆÚ
  50           * ÐÞ¸ÄÈË£º
  51           * µÚN´ÎÐÞ¸Ä£º
  52           * ÐÞ¸ÄÔ­Òò£º
  53           * ±¸×¢£º"P1=0x2F(0010_1111)"ÏÈ¸³Öµ¸øP1¿Ú£¬P15Îª1£¬P14Îª0£¬ÊäÈë¶Ë(P10-P13)Îª1£¬
  54           * È»ºóÔÙ¶ÁP1¿ÚµçÆ½(P1&0x0F)£¬²¢°Ñ¸ßËÄÎ»¶¼Çå0£¬¼ÙÈçÕâÊ±ºòP10±»°´ÏÂ£¬ÄÇ¶Áµ½µÄP1
C51 COMPILER V9.00   KEY_MODE                                                              11/06/2018 12:14:57 PAGE 2   

  55           * ¿ÚµçÆ½Îª(P1&0x0f)Îª0x0E(0000_1110),È»ºóÓë0x0F(0000_1111)Òì»òµÃµ½0x01(0000_0001),
  56           * 
  57           *******************************************************************************/
  58          uint8_t  triger;
  59          uint8_t  count;
  60          uint8_t  Matrix_Buttons(void)
  61           {
  62   1               uint8_t  readData1,readData2;
  63   1               uint8_t  keyValue;
  64   1               keyValue=0;//Èç¹ûÃ»ÓÐ°´¼ü°´ÏÂ¾ÍÊÇ·µ»Ø0
  65   1               
  66   1               /*******************************************************************************
  67   1               *¹¦ÄÜ£º"P1=0x2F(0010_1111)"ÏÈ¸³Öµ¸øP1¿Ú£¬P15Îª1£¬P14Îª0£¬ÊäÈë¶Ë(P10-P13)Îª1£¬È»
  68   1               * ºóÔÙ¶ÁP1¿ÚµçÆ½(P1&0x0F)£¬²¢°Ñ¸ßËÄÎ»¶¼Çå0(P1&0x0F£¬¼ÙÈçÕâÊ±ºòP10±»°´ÏÂ£¬ÄÇ¶Áµ½
  69   1               * µÄP1¿ÚµçÆ½Îª0x0E(0000_1110),È»ºóÓë0x0F(0000_1111)Òì»òµÃµ½0x01(0000_0001),
  70   1               * readData1µÄ·¶Î§Îª1~4£¬keyValueµÄ·¶Î§Îª1~8¡£
  71   1               *******************************************************************************/
  72   1               P1=0x2F;                       
  73   1               readData1=(P1&0x0F)^0x0F;
  74   1               switch(readData1)
  75   1               {
  76   2                       case 1:
  77   2                               keyValue=1; //SNOOZE-PAUSE
  78   2                               break;
  79   2                       case 2:
  80   2                               keyValue=2; //VOL+
  81   2                               break;
  82   2                       case 3:
  83   2                               keyValue=3; //TIME-DIM
  84   2                               break;
  85   2                       case 4:
  86   2                               keyValue=4; //NEXT
  87   2                               break;
  88   2                       default:
  89   2                               break;
  90   2               }
  91   1               /*******************************************************************************
  92   1               *¹¦ÄÜ£º"P1=0x1F(0001_1111)"ÏÈ¸³Öµ¸øP1¿Ú£¬P15Îª0£¬P14Îª1£¬ÊäÈë¶Ë(P10-P13)Îª1£¬È»
  93   1               * ºóÔÙ¶ÁP1¿ÚµçÆ½(P1&0x0F)£¬²¢°Ñ¸ßËÄÎ»¶¼Çå0(P1&0x0F£¬¼ÙÈçÕâÊ±ºòP11±»°´ÏÂ£¬ÄÇ¶Áµ½
  94   1               * µÄP1¿ÚµçÆ½Îª0x0D(0000_1101),È»ºóÓë0x0F(0000_1111)Òì»òµÃµ½0x02(0000_0010),
  95   1               * readData2µÄ·¶Î§Îª1~4£¬keyValueµÄ·¶Î§Îª1~8¡£
  96   1               *******************************************************************************/
  97   1               P1=0x1F;
  98   1               readData2=(P1&0x0F)^0x0F;
  99   1               switch(readData2)
 100   1               {
 101   2                       case 1:
 102   2                               keyValue=5; //ALARM
 103   2                               break;
 104   2                       case 2:
 105   2                               keyValue=6; //VOL-
 106   2                               break;
 107   2                       case 3:
 108   2                               keyValue=7; //BT
 109   2                               break;
 110   2                       case 4:
 111   2                               keyValue=8; //PREV
 112   2                               break;
 113   2                       default:
 114   2                               break;
 115   2               }
 116   1               
C51 COMPILER V9.00   KEY_MODE                                                              11/06/2018 12:14:57 PAGE 3   

 117   1               return keyValue;
 118   1       }
 119          
 120          /*******************************************************************************
 121           * º¯ÊýÔ­ÐÍ£º
 122           * ÊäÈë²ÎÊý£º
 123           * Êä³ö²ÎÊý£º
 124           * º¯Êý¹¦ÄÜ£º
 125           * ·µ»ØÖµËµÃ÷£º
 126           * ´´½¨ÈÕÆÚ£º
 127           * ´´½¨ÈË£º
 128           * ÐÞ¸ÄÈÕÆÚ
 129           * ÐÞ¸ÄÈË£º
 130           * µÚN´ÎÐÞ¸Ä£º
 131           * ÐÞ¸ÄÔ­Òò£º
 132           * ±¸×¢£º
 133           *******************************************************************************/
 134          uint8_t GetKeyValue(void) 
 135          {
 136   1              uint8_t  keyNum;
 137   1              keyNum=Matrix_Buttons();
 138   1              return keyNum; //·µ»Ø°´¼ü
 139   1      }
 140          
 141          /*******************************************************************************
 142           * º¯ÊýÔ­ÐÍ£º
 143           * ÊäÈë²ÎÊý£º
 144           * Êä³ö²ÎÊý£º
 145           * º¯Êý¹¦ÄÜ£º
 146           * ·µ»ØÖµËµÃ÷£º
 147           * ´´½¨ÈÕÆÚ£º
 148           * ´´½¨ÈË£º
 149           * ÐÞ¸ÄÈÕÆÚ
 150           * ÐÞ¸ÄÈË£º
 151           * µÚN´ÎÐÞ¸Ä£º
 152           * ÐÞ¸ÄÔ­Òò£º
 153           * ±¸×¢£º
 154           *******************************************************************************/
 155          void KeyEventPorc(uint8_t KeyTmp) //±»µ÷ÓÃÊ±½ÓÊÕµÄÊÇGetKeyValue()µÄ·µ»ØÖµ  Ò»°ã¹Ì¶¨£¬²»¸ü¸Ä
 156          {
 157   1              gbKeyPress=0;
 158   1              if(KeyCurValue!=KeyTmp) //Õâ¸öifÓï¾äÊÇÈ¥¶¶£¬»á±»Ö´ÐÐÁ½´Î£¬µÚÈý´Î½øÀ´Ê±Ö±½ÓÌø¹ý
 159   1              {//KeyTmpÎªÁÙÊ±Öµ£¬
 160   2                      if(KeyCurValueBK!=KeyTmp)
 161   2                              KeyCurValueBK=KeyTmp;
 162   2                      else //µÚ¶þ´Î½øÀ´Ê±Ö´ÐÐÕâÒ»Ìõ
 163   2                              KeyCurValue=KeyTmp; //
 164   2                      return;
 165   2              }
 166   1              if(KeyCurValue==KeyLastValue)
 167   1              {
 168   2                      if((KeyLastValue==0) || (cntKeyLoop==0))
 169   2                              return;
 170   2                      if(--cntKeyLoop==0) //Õâ¸öÔÚµÚ¶þ´Î½øKeyEventPorc()º¯Êý£¨µÚÒ»´Î½ø¡°if(KeyCurValue==KeyLastValue)¡±Ö®Ç°£©Ê
             -±±»ÏÂÃæ¸³ÖµÎª5
 171   2                      { //cntKeyLoopÎª5¾ÍÊÇ50msÊ±¼ä
 172   3                              KeyValue=KeyLastValue; //·À¶¶Ö®ºó°ÑÈ·¶¨µÄ°´¼ü¸³Öµ¸øKeyValue
 173   3                              if(gbKeyNone==0)
 174   3                                      gbKeyPress=1;
 175   3                              switch(KeyEvent)
 176   3                              {
 177   4                                      case 0:
C51 COMPILER V9.00   KEY_MODE                                                              11/06/2018 12:14:57 PAGE 4   

 178   4                                              KeyEvent=1;
 179   4                                              KeyValue |= K_D;
 180   4                                              cntKeyLoop=cKEY_HOLD;
 181   4                                              break;
 182   4                                      case 1:
 183   4                                              KeyEvent=2;
 184   4                                              KeyValue |= K_H;
 185   4                                              cntKeyLoop=cKEY_RATE_VOL;
 186   4                                              break;
 187   4                                              case 2:
 188   4                                      case 3:
 189   4                                              KeyEvent=3;
 190   4                                              KeyValue |= K_R;
 191   4                                              cntKeyLoop=cKEY_RATE_VOL;
 192   4                                              if(cntKeylong<250)
 193   4                                                      cntKeylong++;
 194   4                                              break;
 195   4                              }
 196   3                      }
 197   2              }
 198   1              else
 199   1              {
 200   2                      if(KeyLastValue)
 201   2                      {
 202   3                              KeyValue=KeyLastValue;
 203   3                              if(gbKeyNone==0)
 204   3                                      gbKeyPress=1;
 205   3                              switch(KeyEvent)
 206   3                              {
 207   4                                      case 1:KeyValue |= K_U; break;
 208   4                                      case 2:KeyValue |= K_LU;break;
 209   4                                      case 3:KeyValue |= K_LU;break;
 210   4                              }
 211   3                              KeyEvent=0;
 212   3                      }
 213   2                      else
 214   2                      {
 215   3                              gbKeyNone=0;
 216   3                              cntKeylong=0;
 217   3                      }
 218   2                      cntKeyLoop=cKEY_CLICK;
 219   2                      KeyLastValue=KeyCurValue;
 220   2              }
 221   1      }
 222          
 223          /*******************************************************************************
 224           * º¯ÊýÔ­ÐÍ£º
 225           * ÊäÈë²ÎÊý£º
 226           * Êä³ö²ÎÊý£º
 227           * º¯Êý¹¦ÄÜ£º
 228           * ·µ»ØÖµËµÃ÷£º
 229           * ´´½¨ÈÕÆÚ£º
 230           * ´´½¨ÈË£º
 231           * ÐÞ¸ÄÈÕÆÚ
 232           * ÐÞ¸ÄÈË£º
 233           * µÚN´ÎÐÞ¸Ä£º
 234           * ÐÞ¸ÄÔ­Òò£º
 235           * ±¸×¢£º
 236           *******************************************************************************/
 237          void KeyScan(void) //±»Ö÷º¯Êýµ÷ÓÃ
 238          {
 239   1              KeyEventPorc(GetKeyValue());
C51 COMPILER V9.00   KEY_MODE                                                              11/06/2018 12:14:57 PAGE 5   

 240   1      }
 241           
 242           /*******************************************************************************
 243           * º¯ÊýÔ­ÐÍ£º
 244           * ÊäÈë²ÎÊý£º
 245           * Êä³ö²ÎÊý£º
 246           * º¯Êý¹¦ÄÜ£º
 247           * ·µ»ØÖµËµÃ÷£º
 248           * ´´½¨ÈÕÆÚ£º
 249           * ´´½¨ÈË£º
 250           * ÐÞ¸ÄÈÕÆÚ
 251           * ÐÞ¸ÄÈË£º
 252           * µÚN´ÎÐÞ¸Ä£º
 253           * ÐÞ¸ÄÔ­Òò£º
 254           * ±¸×¢£º2.¡¢³¤°´¡°TIME¡±¼ü2S£¬Ð¡Ê±×Ö·ûÉÁË¸£¬¶Ì°´¡°VOL-/PREV¡±¼ü£¬Ð¡Ê±µÝ¼õ£¬³¤°´
 255           * ¡°VOL-/PREV¡±¼ü£¬Ð¡Ê±¿ìËÙµÝ¼õ£»¶Ì°´¡°VOL+/NEXT¡±¼ü£¬Ð¡Ê±µÝÔö£¬³¤°´¡°VOL+/NEXT¡±¼ü£¬
 256           * Ð¡Ê±¿ìËÙµÝÔö¡£
 257           * 3¡¢¶Ì°´¡°TIME¡±¼ü£¬·Ö×Ö·ûÉÁË¸£¬¶Ì°´¡°VOL-/PREV¡±¼ü£¬·ÖÎ»ÊýµÝ¼õ£¬³¤°´¡°VOL-/PREV¡±¼ü£¬
 258           * ·ÖÎ»Êý¿ìËÙµÝ¼õ£»¶Ì°´¡°VOL+/NEXT¡±¼ü£¬·ÖÎ»ÊýµÝÔö£¬³¤°´¡°VOL+/NEXT¡±¼ü£¬·ÖÎ»Êý¿ìËÙµÝ
 259           * Ôö¡£
 260           * 4¡¢ÔÚ×ßÊ±Ä£Ê½ÏÂ£¬¶Ì°´¡°TIME/DIM¡±¼ü£¬µ÷ÕûÏÔÊ¾ÁÁ¶È£¬¿ÉÑ­»·µ÷Õû¸ß¡¢ÖÐ¡¢µÍÁÁ£¨Ä¬ÈÏ
 261           * Îª¸ßÁÁ£©
 262           *******************************************************************************/
 263          void KeyComMsg(void) 
 264          {
 265   1              if(gbKeyPress)
 266   1              { 
 267   2                      //Flag_data_bk=1;//Êý¾Ý¸Ä±äÊ±±¸·Ý
 268   2                      switch(KeyValue)
 269   2                      {
 270   3                              case KU(K_SNOOZE_PAUSE)://¶Ì°´
 271   3                              {
 272   4                                      
 273   4                                      break;
 274   4                              }
 275   3                              case KH(K_SNOOZE_PAUSE)://³¤°´
 276   3                              {
 277   4                                      
 278   4                                      break;
 279   4                              }
 280   3                              case KU(K_VOLINC): //¶Ì°´//ÒôÁ¿¼Ó 
 281   3                              {
 282   4                                      //¶Ì°´¡°VOL+/NEXT¡±¼ü£¬Ð¡Ê±µÝÔö£¬
 283   4                                      //¶Ì°´¡°VOL+/NEXT¡±¼ü£¬·ÖÖÓÎ»ÊýµÝÔö£¬
 284   4                                      break;
 285   4                              }
 286   3                              case KR(K_VOLINC): //³¤°´//ÒôÁ¿¼Ó
 287   3                              {
 288   4                                      //³¤°´¡°VOL+/NEXT¡±¼ü£¬Ð¡Ê±¿ìËÙµÝÔö¡£
 289   4                                      //³¤°´¡°VOL+/NEXT¡±¼ü£¬·ÖÖÓÎ»Êý¿ìËÙµÝÔö¡£
 290   4                                      break;
 291   4                              }
 292   3                              case KU(K_TIME_DIM): //¶Ì°´//¶Ì°´·ÖÖÓ×Ö·ûÉÁË¸£¬
 293   3                              {                                        //¶Ì°´¡°TIME/DIM¡±¼ü£¬µ÷ÕûÏÔÊ¾ÁÁ¶È£¬¿ÉÑ­»·µ÷Õû¸ß¡¢ÖÐ¡¢µÍÁÁ£¨Ä¬ÈÏÎª¸ßÁÁ£©
 294   4                                      break;
 295   4                              }
 296   3                              case KR(K_TIME_DIM) //¼ÆÊ±
 297   3                              {
*** ERROR C141 IN LINE 297 OF APP_USER\SOURCE\KEY_MODE.C: syntax error near '{'
 298   4                                      if(cntKeylong==10)//³¤°´2sÐ¡Ê±×Ö·ûÉÁË¸
 299   4                                      {
 300   5                                              
C51 COMPILER V9.00   KEY_MODE                                                              11/06/2018 12:14:57 PAGE 6   

 301   5                                      }
 302   4                                      break;
 303   4                              }
 304   3                              case KU(K_NEXT): //¶Ì°´
 305   3                              {
 306   4                                      //¶Ì°´¡°VOL+/NEXT¡±¼ü£¬Ð¡Ê±µÝÔö£¬
 307   4                                      //¶Ì°´¡°VOL+/NEXT¡±¼ü£¬·ÖÖÓÎ»ÊýµÝÔö£¬
 308   4                                      break;
 309   4                              }
 310   3                              case KH(K_NEXT): //³¤°´
 311   3                              {
 312   4                                      //³¤°´¡°VOL+/NEXT¡±¼ü£¬Ð¡Ê±¿ìËÙµÝÔö¡£
 313   4                                      //³¤°´¡°VOL+/NEXT¡±¼ü£¬·ÖÖÓÎ»Êý¿ìËÙµÝÔö¡£
 314   4                                      break;
 315   4                              }
 316   3                              case KU(K_ALARM): //¶Ì°´//ÄÖÖÓ
 317   3                              {
 318   4                                      //¶Ì°´¡°VOL+/NEXT¡±¼ü£¬Ð¡Ê±µÝÔö£¬
 319   4                                      //¶Ì°´¡°VOL+/NEXT¡±¼ü£¬·ÖÖÓÎ»ÊýµÝÔö£¬
 320   4                                      break;
 321   4                              }
 322   3                              case KH(K_ALARM): //³¤°´//ÄÖÖÓ
 323   3                              {
 324   4                                      //³¤°´¡°VOL+/NEXT¡±¼ü£¬Ð¡Ê±¿ìËÙµÝÔö¡£
 325   4                                      //³¤°´¡°VOL+/NEXT¡±¼ü£¬·ÖÖÓÎ»Êý¿ìËÙµÝÔö¡£
 326   4                                      break;
 327   4                              }
 328   3                              case KU(K_VOLDEC): //¶Ì°´//ÒôÁ¿¼õ
 329   3                              {
 330   4                                      //¶Ì°´¡°VOL-/PREV¡±¼ü£¬Ð¡Ê±µÝ¼õ£¬
 331   4                                      //¶Ì°´¡°VOL-/PREV¡±¼ü£¬·ÖÖÓÎ»ÊýµÝ¼õ£¬
 332   4                                      
 333   4                                      sys
 334   4                                      break;
*** ERROR C202 IN LINE 334 OF APP_USER\SOURCE\KEY_MODE.C: 'sys': undefined identifier
*** ERROR C141 IN LINE 334 OF APP_USER\SOURCE\KEY_MODE.C: syntax error near 'break'
 335   4                              }
 336   3                              case KR(K_VOLDEC): //³¤°´//ÒôÁ¿¼õ
 337   3                              {
 338   4                                      //³¤°´¡°VOL-/PREV¡±¼ü£¬Ð¡Ê±¿ìËÙµÝ¼õ£»
 339   4                                      ///³¤°´¡°VOL-/PREV¡±¼ü£¬·ÖÖÓÎ»Êý¿ìËÙµÝ¼õ£»
 340   4                                      break;
 341   4                              }
 342   3                              case KU(K_BT): //¶Ì°´
 343   3                              {
 344   4                                      //¶Ì°´¡°VOL-/PREV¡±¼ü£¬Ð¡Ê±µÝ¼õ£¬
 345   4                                      //¶Ì°´¡°VOL-/PREV¡±¼ü£¬·ÖÖÓÎ»ÊýµÝ¼õ£¬
 346   4                                      break;
 347   4                              }
 348   3                              case KH(K_BT): //³¤°´
 349   3                              {
 350   4                                      //³¤°´¡°VOL-/PREV¡±¼ü£¬Ð¡Ê±¿ìËÙµÝ¼õ£»
 351   4                                      //³¤°´¡°VOL-/PREV¡±¼ü£¬·ÖÖÓÎ»Êý¿ìËÙµÝ¼õ£»
 352   4                                      break;
 353   4                              }
 354   3                              case KU(K_PREV): //¶Ì°´
 355   3                              {
 356   4                                      //¶Ì°´¡°VOL-/PREV¡±¼ü£¬Ð¡Ê±µÝ¼õ£¬
 357   4                                      //¶Ì°´¡°VOL-/PREV¡±¼ü£¬·ÖÖÓÎ»ÊýµÝ¼õ£¬
 358   4                                      break;
 359   4                              }
 360   3                              case KH(K_PREV): //³¤°´
C51 COMPILER V9.00   KEY_MODE                                                              11/06/2018 12:14:57 PAGE 7   

 361   3                              {
 362   4                                      //³¤°´¡°VOL-/PREV¡±¼ü£¬Ð¡Ê±¿ìËÙµÝ¼õ£»
 363   4                                      //³¤°´¡°VOL-/PREV¡±¼ü£¬·ÖÖÓÎ»Êý¿ìËÙµÝ¼õ£»
 364   4                                      break;
 365   4                              }
 366   3                              
 367   3                              
 368   3                      }
 369   2              }
 370   1      }
 371          
 372          
 373          
 374          
 375           
 376           /*******************************************************************************
 377           * º¯ÊýÔ­ÐÍ£º
 378           * ÊäÈë²ÎÊý£º
 379           * Êä³ö²ÎÊý£º
 380           * º¯Êý¹¦ÄÜ£º
 381           * ·µ»ØÖµËµÃ÷£º
 382           * ´´½¨ÈÕÆÚ£º
 383           * ´´½¨ÈË£º
 384           * ÐÞ¸ÄÈÕÆÚ
 385           * ÐÞ¸ÄÈË£º
 386           * µÚN´ÎÐÞ¸Ä£º
 387           * ÐÞ¸ÄÔ­Òò£º
 388           * ±¸×¢£º
 389           *******************************************************************************/
 390           
 391           
 392           /*******************************************************************************
 393           * º¯ÊýÔ­ÐÍ£º
 394           * ÊäÈë²ÎÊý£º
 395           * Êä³ö²ÎÊý£º
 396           * º¯Êý¹¦ÄÜ£º
 397           * ·µ»ØÖµËµÃ÷£º
 398           * ´´½¨ÈÕÆÚ£º
 399           * ´´½¨ÈË£º
 400           * ÐÞ¸ÄÈÕÆÚ
 401           * ÐÞ¸ÄÈË£º
 402           * µÚN´ÎÐÞ¸Ä£º
 403           * ÐÞ¸ÄÔ­Òò£º
 404           * ±¸×¢£º
 405           *******************************************************************************/
 406          
 407          
 408          
 409          
 410          
 411          
 412          
 413          
 414          
 415          
 416          
 417          
 418          
 419          
 420          

C51 COMPILATION COMPLETE.  0 WARNING(S),  3 ERROR(S)
