C51 COMPILER V9.00   MAIN                                                                  11/07/2018 14:17:29 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\ProgramFiles\Keil_v5\C51\BIN\C51.EXE Device\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Device;.\Ap
                    -p_User\Include) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          //======================================================
   2          // Main program routine
   3          // - Device name  : MC96F6508A
   4          // - Package type : 52LQFP
   5          //======================================================
   6          // For XDATA variable : V1.041.00 ~
   7          #define         MAIN    1
   8          
   9          // Generated    : Mon, Nov 05, 2018 (15:44:40)
  10          #include        "MC96F6508A.h"
  11          #include        "func_def.h"
  12          #include    "app_main.h"
*** ERROR C129 IN LINE 10 OF \HOMEWORK\KEIL5\PROJECT\PROJECT.COMPANY\7、GP-095\GP-095_BT-LED_ALARM\APP_USER\INCLUDE\LED_
             -MODE.H: missing ';' before '|='
  13          
  14          void main()
  15          {
  16                  cli();                  // disable INT. during peripheral setting
  17                  port_init();            // initialize ports
  18                  clock_init();           // initialize operation clock
  19                  KeyINT_init();          // initialize KEY interrupt
  20                  LCD_init();             // initialize LCD
  21                  Timer0_init();          // initialize Timer0
  22                  Timer3_init();          // initialize Timer3
  23                  UART_init();            // initialize UART interface
  24                  WDT_init();             // initialize Watch-dog timer
  25                  WT_init();              // initialize Watch timer
  26                  sei();                  // enable INT.
  27                  
  28                  // TODO: add your main code here
  29                  app_main();
  30                  while(1);
  31          }
  32          
  33          //======================================================
  34          // interrupt routines
  35          //======================================================
  36          
  37          void INT_UART_Rx() interrupt 9
  38          {
  39                  // UART Rx interrupt
  40                  // TODO: add your code here
  41          }
  42          
  43          void INT_UART_Tx() interrupt 10
  44          {
  45                  // UART Tx interrupt
  46                  // TODO: add your code here
  47          }
  48          
  49          void INT_Timer0() interrupt 13
  50          {
  51                  // Timer0 interrupt
  52                  // TODO: add your code here
C51 COMPILER V9.00   MAIN                                                                  11/07/2018 14:17:29 PAGE 2   

  53                  Sys_Tick();
  54          }
  55          
  56          void INT_WT() interrupt 20
  57          {
  58                  // Watch timer interrupt
  59                  // TODO: add your code here
  60                  //这里变量gbHalfSecong的意思为半秒，是因为这个函数中断一次为0.5秒，
  61                  gbHalfSecong=(!gbHalfSecong);
  62                  if(gbHalfSecong)
  63                  {
  64                          if(++gRTC_Sec>59)
  65                          {
  66                                  gRTC_Sec=0;
  67                                  if(++gRTC_Minute>59)
  68                                  {
  69                                          gRTC_Minute=0;
  70                                          if(++gRTC_Hour>23)
  71                                          {
  72                                                  gRTC_Hour=0;
  73                                                  gRTC_Week<<=1;
  74                                                  if(gRTC_Week==0x80)//如果移位之后等于0x80，说明是第8次移位，这时候就是
  75                                                          gRTC_Week=0x01;//周一，所以赋值为0x01。
  76                                          }
  77                                  }
  78                          }
  79                  }
  80          }
  81          
  82          //======================================================
  83          // peripheral setting routines
  84          //======================================================
  85          
  86          unsigned char UART_read()
  87          {
  88                  unsigned char dat;
  89                  
  90                  while(!(UARTST & 0x20));        // wait
  91                  dat = UARTDR;           // read
  92                  return  dat;
  93          }
  94          
  95          void KeyINT_init()
  96          {
  97                  // initialize KEY interrupt
  98                  KPOL1 = 0x05;           // edge : KEY INT.7~4
  99                  KPOL0 = 0x55;           // edge : KEY INT.3~0
 100          }
 101          
 102          void LCD_init()
 103          {
 104                  // initialize LCD
 105                  // Frame freq. = 16.000000Hz
 106                  LCDCRH = 0x00;          // LCD control High
 107                  LCDCRL = 0x00;          // LCD control Low
 108                  LCDCCR = 0x00;          // LCD Contrast control
 109          }
 110          
 111          void Timer0_init()
 112          {
 113                  // initialize Timer0
 114                  // 8bit timer, period = 1.008000mS
C51 COMPILER V9.00   MAIN                                                                  11/07/2018 14:17:29 PAGE 3   

 115                  T0CR = 0x92;            // timer setting
 116                  T0DR = 0x7D;            // period count
 117                  IE2 |= 0x02;            // Enable Timer0 interrupt
 118                  T0CR |= 0x01;           // clear counter
 119          }
 120          
 121          void Timer3_init()
 122          {
 123                  // initialize Timer3
 124                  // 8bit timer, period = 0.050000mS
 125                  T3DR = 0x18;            // period count
 126                  T3CR = 0x8A;            // timer setting
 127                  T3CR |= 0x01;           // clear counter
 128          }
 129          
 130          void UART_init()
 131          {
 132                  // initialize UART interface
 133                  // UART : 9615bps N 8 1
 134                  UARTCR2 = 0x02;         // activate UART
 135                  UARTCR1 = 0x06;         // bit count, parity
 136                  UARTCR2 |= 0xEC;        // interrupt, speed
 137                  UARTCR3 = 0x00;         // stop bit
 138                  UARTBD = 0x67;          // baud rate
 139                  IE1 |= 0x18;            // enable UART interrupt
 140          }
 141          
 142          void UART_write(unsigned char dat)
 143          {
 144                  while(!(UARTST & 0x80));        // wait
 145                  UARTDR = dat;           // write
 146          }
 147          
 148          void WDT_clear()
 149          {
 150                  WDTCR |= 0x20;          // Clear Watch-dog timer
 151          }
 152          
 153          void WDT_init()
 154          {
 155                  // initialize Watch-dog timer
 156                  WDTDR = 0x01;           // period
 157                  WDTCR = 0xC0;           // setting
 158                  //WDTCR |= 0x02;        // Use WDTRC
 159                  WDT_clear();
 160          }
 161          
 162          void WT_init()
 163          {
 164                  // initialize Watch timer
 165                  WTCR = 0x88;            // setting
 166                  WTDR = 0x01;            // set duty
 167                  WTDR = 0x81;            // clear WT
 168                  IE3 |= 0x04;            // Enable WT interrupt
 169          }
 170          
 171          void clock_init()
 172          {
 173                  // internal RC clock (16.000000MHz)
 174                  OSCCR = 0x28;           // Set Int. OSC
 175                  SCCR = 0x00;            // Use Int. OSC
 176          }
C51 COMPILER V9.00   MAIN                                                                  11/07/2018 14:17:29 PAGE 4   

 177          
 178          void port_init()
 179          {
 180                  // initialize ports
 181                  //   1 : P13      in  
 182                  //   2 : P14      out 
 183                  //   3 : P15      out 
 184                  //   8 : P60      out 
 185                  //   9 : P61      out 
 186                  //  11 : SXIN     out 
 187                  //  12 : SXOUT    out 
 188                  //  14 : P20      out 
 189                  //  15 : P21      out 
 190                  //  16 : P22      out 
 191                  //  17 : P23      out 
 192                  //  18 : P24      out 
 193                  //  19 : P25      out 
 194                  //  20 : P26      out 
 195                  //  21 : P27      out 
 196                  //  22 : P30      out 
 197                  //  23 : P31      out 
 198                  //  24 : P32      out 
 199                  //  25 : P33      out 
 200                  //  26 : P34      out 
 201                  //  27 : P35      out 
 202                  //  28 : P36      out 
 203                  //  29 : P37      out 
 204                  //  30 : P40      out 
 205                  //  31 : P41      out 
 206                  //  32 : P42      out 
 207                  //  33 : P43      out 
 208                  //  34 : P44      out 
 209                  //  35 : P45      out 
 210                  //  36 : P46      out 
 211                  //  37 : P47      out 
 212                  //  38 : P50      out 
 213                  //  39 : P51      out 
 214                  //  40 : P52      out 
 215                  //  41 : P53      out BT_RED_OUTPUT
 216                  //  42 : P54      out BT_RED_OUTPUT
 217                  //  43 : P55      out BT_BLUE_INPUT
 218                  //  44 : TXD      out 
 219                  //  45 : RXD      in  
 220                  //  46 : P00      in  
 221                  //  47 : P01      out 
 222                  //  48 : P02      out 
 223                  //  49 : P03      out BT_RED_INPUT
 224                  //  50 : P10      in  
 225                  //  51 : P11      in  
 226                  //  52 : P12      in  
 227                  P0IO = 0xFE;            // direction
 228                  P0PU = 0x00;            // pullup
 229                  P0OD = 0x00;            // open drain
 230                  P0DB = 0x00;            // bit7~6(debounce clock), bit1~0=P01~00 debounce
 231                  P0   = 0x00;            // port initial value
 232          
 233                  P1IO = 0xF0;            // direction
 234                  P1PU = 0x3F;            // pullup
 235                  P1OD = 0x00;            // open drain
 236                  P1DB = 0x00;            // P17~10 debounce
 237                  P1   = 0x00;            // port initial value
 238          
C51 COMPILER V9.00   MAIN                                                                  11/07/2018 14:17:29 PAGE 5   

 239                  P2IO = 0xFF;            // direction
 240                  P2PU = 0xFF;            // pullup
 241                  P2OD = 0x00;            // open drain
 242                  P2   = 0x00;            // port initial value
 243          
 244                  P3IO = 0xFF;            // direction
 245                  P3PU = 0xFF;            // pullup
 246                  P3OD = 0x00;            // open drain
 247                  P3   = 0x00;            // port initial value
 248          
 249                  P4IO = 0xFF;            // direction
 250                  P4PU = 0xFF;            // pullup
 251                  P4OD = 0x00;            // open drain
 252                  P4   = 0x00;            // port initial value
 253          
 254                  P5IO = 0x7F;            // direction
 255                  P5PU = 0x00;            // pullup
 256                  P5OD = 0x00;            // open drain
 257                  P5   = 0x00;            // port initial value
 258          
 259                  P6IO = 0xFF;            // direction
 260                  P6PU = 0x01;            // pullup
 261                  P6OD = 0x00;            // open drain
 262                  P6   = 0x00;            // port initial value
 263          
 264                  // Set port functions
 265                  P0FSR = 0x00;           // P0 selection
 266                  P2FSR = 0x00;           // P2 selection
 267                  P3FSR = 0x00;           // P3 selection
 268                  P4FSR = 0x00;           // P4 selection
 269                  P5FSRH = 0x18;          // P5 selection High
 270                  P5FSRL = 0x00;          // P5 selection Low
 271                  P6FSR = 0x0C;           // P6 selection
 272          }
 273          

C51 COMPILATION COMPLETE.  0 WARNING(S),  1 ERROR(S)
