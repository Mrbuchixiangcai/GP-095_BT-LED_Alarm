C51 COMPILER V9.00   LED_MODE                                                              11/14/2018 18:00:10 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LED_MODE
OBJECT MODULE PLACED IN .\Objects\LED_Mode.obj
COMPILER INVOKED BY: D:\ProgramFiles\Keil_v5\C51\BIN\C51.EXE App_User\Source\LED_Mode.c OPTIMIZE(8,SPEED) BROWSE INCDIR(
                    -.\Device;.\App_User\Include) DEBUG OBJECTEXTEND PRINT(.\Listings\LED_Mode.lst) OBJECT(.\Objects\LED_Mode.obj)

line level    source

   1          /*******************/
   2          /*头文件header file*/
   3          /*******************/
   4          #include "app_main.h"
   5          
   6          /************************/
   7          /*宏定义macro definition*/
   8          /************************/
   9          u8 dispBuff[5];
  10          #define DIG_NUM1 dispBuff[0]
  11          #define DIG_NUM2 dispBuff[1]
  12          #define DIG_NUM3 dispBuff[2]
  13          #define DIG_NUM4 dispBuff[3]
  14          #define DIG_NUM5 dispBuff[4]
  15          /*************************/
  16          /*类型定义byte definition*/
  17          /*************************/
  18          LED_BRIGHTNESS_TypeDef  LED_Brightness_TypeDef;
  19          ALRAM_TypeDef  Alarm1_TypeDef;
  20          
  21          /****************************/
  22          /*标志位定义flags definetion*/
  23          /****************************/
  24          BOOL  gbDispSetA1;
  25          
  26          //变量定义
  27          u8 bdata lcd_BitRam0;
  28          u8 bdata lcd_BitRam1;
  29          
  30          sbit  gblcd_buz1   = lcd_BitRam0 ^ 0;
  31          sbit  gblcd_al     = lcd_BitRam0 ^ 1;//原来是gblcd_radio1
  32          sbit  gblcd_buz2   = lcd_BitRam0 ^ 2;
  33          sbit  gblcd_radio2 = lcd_BitRam0 ^ 3;
  34          sbit  gblcd_dot    = lcd_BitRam0 ^ 4;//
  35          sbit  gblcd_colon  = lcd_BitRam0 ^ 5;//
  36          sbit  gblcd_sleep  = lcd_BitRam0 ^ 6;//
  37          sbit  gblcd_aux    = lcd_BitRam0 ^ 7;
  38          sbit  gblcd_am     = lcd_BitRam1 ^ 0;//
  39          sbit  gblcd_pm     = lcd_BitRam1 ^ 1;//
  40          sbit  gblcd_fm     = lcd_BitRam1 ^ 2;
  41          sbit  gblcd_mw     = lcd_BitRam1 ^ 3;
  42          sbit  gblcd_mhz    = lcd_BitRam1 ^ 4;
  43          sbit  gblcd_khz    = lcd_BitRam1 ^ 5;
  44          sbit  gblcd_five   = lcd_BitRam1 ^ 6;
  45          sbit  gblcd_bt     = lcd_BitRam1 ^ 7;
  46          //                                                                                                        
             -                                                                                                                        
             -           sbit  gblcd_al        = lcd_BitRam1 ^ 7; //al:alarm
  47          /*****************************/
  48          /*变量定义variable definition*/
  49          /*****************************/
  50          uint8_t        cntDispStatus;
  51          
  52          
C51 COMPILER V9.00   LED_MODE                                                              11/14/2018 18:00:10 PAGE 2   

  53          /**************************/
  54          /*数组定义array definition*/
  55          /**************************/
  56          code u8 dispCode_Arr[]=  //arr:array
  57          {
  58                  DIG_0,DIG_1,DIG_2,DIG_3,DIG_4,DIG_5,DIG_6,DIG_7,DIG_8,DIG_9,DIG_NONE,           //数字
  59                  CH_a,CH_b,CH_c,CH_d,CH_h,CH_l,CH_n,CH_o,CH_r,CH_t,CH_u,CH_y,                            //小写字母
  60                  CH_A,CH_C,CH_E,CH_F,CH_G,CH_H,CH_I,CH_J,CH_L,CH_N,CH_O,CH_P,CH_S,CH_U,CH__,     //大写字母
  61          };
  62          
  63          /******************************/
  64          /*函数声明Function declaration*/
  65          /******************************/
  66          
  67          /*****************************/
  68          /*函数定义function definetion*/
  69          /*****************************/
  70          
  71          
  72          /*******************************************************************************
  73           * 函数原型：
  74           * 输入参数：
  75           * 输出参数：
  76           * 函数功能：把要更新的值赋给DIG_NUMx，
  77           * 返回值说明：
  78           * 创建日期：
  79           * 创建人：
  80           * 修改日期
  81           * 修改人：
  82           * 第N次修改：
  83           * 修改原因：
  84           * 备注：把要更新的值赋给DIG_NUMx，然后相当于赋值给了dispBuff[x]，dispBuff被调用
  85           *               在Led_Buffer[i] = dispCode_Arr[dispBuff[i]]这里被赋给个Led_Buffer,
  86           *               Led_Buffer会被与上一次调用Led_Buffer时判断，，然后置位相应的LED端口。
  87           *******************************************************************************/
  88          void DisplayNum12(u8 dat)
  89          {
  90   1              DIG_NUM1 = (dat / 10); //相当于赋值给了dispBuff[0]，最后判断是否与对应的LED，
  91   1              DIG_NUM2 = (dat % 10);
  92   1              if (!DIG_NUM1)
  93   1                      DIG_NUM1 = eD_NONE;
  94   1      }
  95          
  96          /*******************************************************************************
  97           * 函数原型：
  98           * 输入参数：
  99           * 输出参数：
 100           * 函数功能：
 101           * 返回值说明：
 102           * 创建日期：
 103           * 创建人：
 104           * 修改日期
 105           * 修改人：
 106           * 第N次修改：
 107           * 修改原因：
 108           * 备注：
 109           *******************************************************************************/
 110          void DisplayNum34(u8 dat)
 111          {
 112   1              DIG_NUM3 = (dat / 10);
 113   1              DIG_NUM4 = (dat % 10);
 114   1      }
C51 COMPILER V9.00   LED_MODE                                                              11/14/2018 18:00:10 PAGE 3   

 115          
 116          /*******************************************************************************
 117           * 函数原型：
 118           * 输入参数：
 119           * 输出参数：
 120           * 函数功能：
 121           * 返回值说明：
 122           * 创建日期：
 123           * 创建人：
 124           * 修改日期
 125           * 修改人：
 126           * 第N次修改：
 127           * 修改原因：
 128           * 备注：
 129           *******************************************************************************/
 130          BOOL NoFlash(void)
 131          {
 132   1              if (cntNoFlash != 0)
 133   1              {
 134   2                      //cntNoFlash--;
 135   2                      return 1;
 136   2              }
 137   1              return 0;
 138   1      }
 139          
 140          /*******************************************************************************
 141           * 函数原型：
 142           * 输入参数：
 143           * 输出参数：
 144           * 函数功能：
 145           * 返回值说明：
 146           * 创建日期：
 147           * 创建人：
 148           * 修改日期
 149           * 修改人：
 150           * 第N次修改：
 151           * 修改原因：
 152           * 备注：
 153           *******************************************************************************/
 154          void Display_HH_MM(u8 hh_mm_TypeDef)
 155          {
 156   1              u8  tmpHour, tmpMinute;
 157   1              switch (hh_mm_TypeDef)
 158   1              {
 159   2                      case eDS_RTC:
 160   2                              tmpHour=gRTC_Hour;
 161   2                              tmpMinute=gRTC_Minute;
 162   2                              break;
 163   2                      case eDS_AL1:
 164   2                              tmpHour = Alarm1_TypeDef.hour;
 165   2                              tmpMinute = Alarm1_TypeDef.minute;
 166   2                              break;
 167   2              }
 168   1              if (gb12HourDisp)//12小时制显示
 169   1              {
 170   2                      if (tmpHour < 12)  //如果小于12则是凌晨0点到11:59，为上午
 171   2                      {
 172   3                              gblcd_am = 1;  //标志位为1，设置对应的LED是否亮起
 173   3                      }
 174   2                      else
 175   2                      {
 176   3                              gblcd_pm = 1; //如果大于12则是12:00到23:59，为下午//标志位为1，设置对应的LED是否亮起
C51 COMPILER V9.00   LED_MODE                                                              11/14/2018 18:00:10 PAGE 4   

 177   3                              tmpHour -= 12;//因为是12小时制，所以下午的时间也是12小时制显示，要减12
 178   3                      }
 179   2                      if (tmpHour == 0) //零点是显示12的，中午12点也是显示12的
 180   2                      {
 181   3                              tmpHour = 12;
 182   3                      }
 183   2                      DisplayNum12(tmpHour);
 184   2                      DisplayNum34(tmpMinute);
 185   2              }
 186   1      }
 187          
 188          /*******************************************************************************
 189           * 函数原型：
 190           * 输入参数：
 191           * 输出参数：
 192           * 函数功能：
 193           * 返回值说明：
 194           * 创建日期：
 195           * 创建人：
 196           * 修改日期
 197           * 修改人：
 198           * 第N次修改：
 199           * 修改原因：
 200           * 备注：
 201           *******************************************************************************/
 202          void Display_ALarm1(void)
 203          {
 204   1              gblcd_colon = 1;
 205   1              Display_HH_MM(eDS_AL1);
 206   1      }
 207          
 208          /*******************************************************************************
 209           * 函数原型：
 210           * 输入参数：
 211           * 输出参数：
 212           * 函数功能：
 213           * 返回值说明：
 214           * 创建日期：
 215           * 创建人：
 216           * 修改日期
 217           * 修改人：
 218           * 第N次修改：
 219           * 修改原因：
 220           * 备注：
 221           *******************************************************************************/
 222          void Display_SetAlarm1(void)
 223          {
 224   1              if ((gb0_5s) || (NoFlash()))
 225   1              {
 226   2                      gblcd_colon = 1;
 227   2                      Display_HH_MM(eDS_AL1);
 228   2              }
 229   1      }
 230          
 231          /*******************************************************************************
 232           * 函数原型：
 233           * 输入参数：
 234           * 输出参数：
 235           * 函数功能：
 236           * 返回值说明：
 237           * 创建日期：
 238           * 创建人：
C51 COMPILER V9.00   LED_MODE                                                              11/14/2018 18:00:10 PAGE 5   

 239           * 修改日期
 240           * 修改人：
 241           * 第N次修改：
 242           * 修改原因：
 243           * 备注：之所以gb0_5s大于0时才能进入if代码，是因为这个是设置RTC，要每隔0.5s闪烁，
 244           *       而cntNoFlash()是要常亮，比如在设置时时间在闪，但是要按下加或者减时要常
 245           *               亮1是，这样让设置的人看到，所以要gb0_5s为大于0和常亮时进入
 246           *******************************************************************************/
 247          void Display_SetRTC(void)
 248          {
 249   1              if ((gb0_5s) || (NoFlash()))
 250   1              {
 251   2                      gblcd_colon = 1;
 252   2                      Display_HH_MM(eDS_RTC);
 253   2              }
 254   1      }
 255          
 256          /*******************************************************************************
 257           * 函数原型：
 258           * 输入参数：
 259           * 输出参数：
 260           * 函数功能：
 261           * 返回值说明：
 262           * 创建日期：
 263           * 创建人：
 264           * 修改日期
 265           * 修改人：
 266           * 第N次修改：
 267           * 修改原因：
 268           * 备注：
 269           *******************************************************************************/
 270          void Display_RTC(void)
 271          {
 272   1              if ((!gbUser_AdjClk) || (gbHalfSecond))
 273   1              {
 274   2                      gblcd_colon = 1;
 275   2                      Display_HH_MM(eDS_RTC);
 276   2              }
 277   1      }
 278          
 279          /*******************************************************************************
 280           * 函数原型：
 281           * 输入参数：
 282           * 输出参数：
 283           * 函数功能：
 284           * 返回值说明：
 285           * 创建日期：
 286           * 创建人：
 287           * 修改日期
 288           * 修改人：
 289           * 第N次修改：
 290           * 修改原因：
 291           * 备注：
 292           *******************************************************************************/
 293          void Display_Zone(void) //什么意思
 294          {
 295   1              if ((gb0_5s) || (NoFlash()))
 296   1              {
 297   2                      DisplayNum34(gZone);
 298   2              }
 299   1      }
 300          
C51 COMPILER V9.00   LED_MODE                                                              11/14/2018 18:00:10 PAGE 6   

 301          /*******************************************************************************
 302           * 函数原型：
 303           * 输入参数：
 304           * 输出参数：
 305           * 函数功能：清除显示缓存
 306           * 返回值说明：
 307           * 创建日期：
 308           * 创建人：
 309           * 修改日期
 310           * 修改人：
 311           * 第N次修改：
 312           * 修改原因：
 313           * 备注：
 314           *******************************************************************************/
 315          void ClearDisplayBuff(void)
 316          {
 317   1              u8  clearCnt;
 318   1              for (clearCnt = 0; clearCnt < 5; clearCnt++)
 319   1              {
 320   2                      dispBuff[clearCnt] = eD_NONE;
 321   2              }
 322   1              lcd_BitRam0 = 0;
 323   1              lcd_BitRam1 = 0;
 324   1      }
 325          
 326          /*******************************************************************************
 327           * 函数原型：
 328           * 输入参数：
 329           * 输出参数：
 330           * 函数功能：
 331           * 返回值说明：
 332           * 创建日期：
 333           * 创建人：
 334           * 修改日期
 335           * 修改人：
 336           * 第N次修改：
 337           * 修改原因：
 338           * 备注：
 339           *******************************************************************************/
 340          void Display_Off(void)
 341          {
 342   1              DIG_NUM1 = eD_NONE;
 343   1              DIG_NUM2 = eD_O;
 344   1              DIG_NUM3 = eD_F;
 345   1              DIG_NUM4 = eD_F;
 346   1      }
 347          
 348          /*******************************************************************************
 349           * 函数原型：
 350           * 输入参数：
 351           * 输出参数：
 352           * 函数功能：
 353           * 返回值说明：
 354           * 创建日期：
 355           * 创建人：
 356           * 修改日期
 357           * 修改人：
 358           * 第N次修改：
 359           * 修改原因：
 360           * 备注：
 361           *******************************************************************************/
 362          void Display_Al1Flag(void)
C51 COMPILER V9.00   LED_MODE                                                              11/14/2018 18:00:10 PAGE 7   

 363          {
 364   1              if (Alarm1_TypeDef.Alarm_WorkMode == ALARM_BEEP)//闹钟响时的工作模式，
 365   1                      gblcd_buz1 = 1;//闹钟响时工作铃声为beep
 366   1              else if (Alarm1_TypeDef.Alarm_WorkMode == ALARM_BT)
 367   1              {
 368   2                      if ((Alarm1_TypeDef.Alarm_OnOff == ALARM_ON) && (Alarm1_TypeDef.Alarm_Snooze == ALARM_SNOOZE_OFF))
 369   2                      {
 370   3                              gblcd_bt = 1;//如果是蓝牙就显示蓝牙或者连接到蓝牙
 371   3                      }
 372   2              }
 373   1      }
 374          
 375          /*******************************************************************************
 376           * 函数原型：
 377           * 输入参数：
 378           * 输出参数：
 379           * 函数功能：
 380           * 返回值说明：
 381           * 创建日期：
 382           * 创建人：
 383           * 修改日期
 384           * 修改人：
 385           * 第N次修改：
 386           * 修改原因：
 387           * 备注：
 388           *******************************************************************************/
 389          void UpdateDisplay(void)
 390          {
 391   1              switch (dispStatus)
 392   1              {
 393   2                      case DISP_AL1:
 394   2                              Display_ALarm1();   
 395   2                              break;
 396   2                      case ADJ_CLK:
 397   2                              Display_SetRTC(); //设置RTC时的显示
 398   2                              break;
 399   2                      case ADJ_ZONE:
 400   2                              Display_Zone();
 401   2                              break; 
 402   2                      case ADJ_ALARM1:
 403   2                              Display_SetAlarm1(); //设置闹钟时的显示
 404   2                              break; 
 405   2                      case POWER_OFF_DISP:
 406   2                              Display_Off();
 407   2                              break; 
 408   2                      default:
 409   2                              Display_RTC();    //RTC走时状态显示
 410   2                              break;
 411   2              }
 412   1              if (cntNoFlash != 0)
 413   1                      cntNoFlash--;
 414   1      }
 415          
 416          /*******************************************************************************
 417           * 函数原型：
 418           * 输入参数：
 419           * 输出参数：
 420           * 函数功能：各种显示标志，比如两点(xx：xx)，buzz，am，pm
 421           * 返回值说明：
 422           * 创建日期：
 423           * 创建人：
 424           * 修改日期
C51 COMPILER V9.00   LED_MODE                                                              11/14/2018 18:00:10 PAGE 8   

 425           * 修改人：
 426           * 第N次修改：
 427           * 修改原因：
 428           * 备注：
 429           *******************************************************************************/
 430          void Display_Flag(void)
 431          {
 432   1              if (dispStatus == ADJ_CLK)
 433   1                      return;
 434   1              if ((dispStatus == ADJ_ALARM1) || (Alarm1_TypeDef.Alarm_OnOff == ALARM_ON))
 435   1              {
 436   2                      if (dispStatus == ADJ_ALARM1)
 437   2                      {
 438   3                              if ((gb0_5s) || (NoFlash())) //NoFlash()不闪烁
 439   3                                      Display_Al1Flag();
 440   3                      }
 441   2              }
 442   1      }
 443          
 444          /*******************************************************************************
 445           * 函数原型：
 446           * 输入参数：
 447           * 输出参数：
 448           * 函数功能：
 449           * 返回值说明：
 450           * 创建日期：
 451           * 创建人：
 452           * 修改日期
 453           * 修改人：
 454           * 第N次修改：
 455           * 修改原因：
 456           * 备注：
 457           *******************************************************************************/
 458          void Display(void)
 459          {
 460   1              u8  cnt;
 461   1              if ((gbUser_AdjClk) || (cntDispStatus))
 462   1              {
 463   2                      ClearDisplayBuff(); //清除显示缓存
 464   2                      UpdateDisplay();
 465   2                      Display_Flag();
 466   2                      for (cnt = 0; cnt < 4; cnt++)
 467   2                      {
 468   3                              Led_Buffer[cnt] = dispCode_Arr[dispBuff[cnt]];
 469   3                      }
 470   2                      Display_LED();
 471   2              }
 472   1      }
 473          
 474           /*******************************************************************************
 475            * 函数原型：
 476            * 输入参数：
 477            * 输出参数：
 478            * 函数功能：只显示某一个标志位，其他的不显示，所以在端口输出哪里是"^"异或符号
 479            * 返回值说明：
 480            * 创建日期：
 481            * 创建人：
 482            * 修改日期
 483            * 修改人：
 484            * 第N次修改：
 485            * 修改原因：
 486            * 备注：
C51 COMPILER V9.00   LED_MODE                                                              11/14/2018 18:00:10 PAGE 9   

 487            *******************************************************************************/
 488          void Display_OnlyFlag(void)
 489          {
 490   1              if ((gbUser_AdjClk) || (cntDispStatus))
 491   1                      return;
 492   1              if (Alarm1_TypeDef.Alarm_OnOff == ALARM_ON)
 493   1              {
 494   2                      Display_Al1Flag();//调用闹钟1显示标志函数
 495   2                      if (gblcd_buz1)
 496   2                      {
 497   3                              //这里还没有写，不知道用不用,也不是很懂意思
 498   3                      }
 499   2                      if (gblcd_bt)
 500   2                      {
 501   3                              //这里还没有写，不知道用不用,也不是很懂意思
 502   3                      }
 503   2              }
 504   1      
 505   1      }
 506          
 507          
 508          
 509            /*******************************************************************************
 510             * 函数原型：
 511             * 输入参数：
 512             * 输出参数：
 513             * 函数功能：设置显示状态为10s
 514             * 返回值说明：
 515             * 创建日期：
 516             * 创建人：
 517             * 修改日期
 518             * 修改人：
 519             * 第N次修改：
 520             * 修改原因：
 521             * 备注：
 522             *******************************************************************************/
 523          void SetDisplayState10s(uint8_t status)
 524          {
 525   1              dispStatus = status;
 526   1              cntDispStatus = cDISP_DELAY_10SEC;
 527   1      }
 528          
 529          
 530          
 531          
 532          
 533          
 534          
 535          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    379    ----
   CONSTANT SIZE    =     38    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
